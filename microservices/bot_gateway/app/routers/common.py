"""
Common Handlers
UK Management Bot - Bot Gateway Service

Handlers for common commands: /start, /help, /menu, /language
"""

import logging
from aiogram import Router, F
from aiogram.filters import Command, CommandStart
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from app.keyboards.common import (
    get_main_menu_keyboard,
    get_language_keyboard
)

logger = logging.getLogger(__name__)

# Create router
router = Router(name="common")


@router.message(CommandStart())
async def cmd_start(
    message: Message,
    user_role: str,
    language: str,
    state: FSMContext
):
    """
    Handle /start command.

    Args:
        message: Telegram message
        user_role: User role from auth middleware
        language: User language from auth middleware
        state: FSM context
    """
    # Clear any active FSM state
    await state.clear()

    # Welcome message based on language
    if language == "uz":
        welcome_text = (
            f"üè¢ <b>UK Management Bot</b>ga xush kelibsiz!\n\n"
            f"Men sizga yordam beraman:\n"
            f"‚Ä¢ üìã Arizalar bilan ishlash\n"
            f"‚Ä¢ üìÖ Smenalar bilan ishlash\n"
            f"‚Ä¢ üìä Analitika ko'rish\n\n"
            f"Quyidagi tugmalardan birini tanlang yoki /help buyrug'ini kiriting."
        )
    else:
        welcome_text = (
            f"üè¢ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>UK Management Bot</b>!\n\n"
            f"–Ø –ø–æ–º–æ–≥—É –≤–∞–º:\n"
            f"‚Ä¢ üìã –£–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞—è–≤–∫–∞–º–∏\n"
            f"‚Ä¢ üìÖ –†–∞–±–æ—Ç–∞—Ç—å —Å–æ —Å–º–µ–Ω–∞–º–∏\n"
            f"‚Ä¢ üìä –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É\n\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏."
        )

    await message.answer(
        text=welcome_text,
        reply_markup=get_main_menu_keyboard(user_role, language)
    )

    logger.info(f"User {message.from_user.id} started bot (role: {user_role}, lang: {language})")


@router.message(Command("help"))
async def cmd_help(message: Message, language: str):
    """
    Handle /help command.

    Args:
        message: Telegram message
        language: User language
    """
    if language == "uz":
        help_text = (
            "üìñ <b>Yordam</b>\n\n"
            "<b>Asosiy buyruqlar:</b>\n"
            "/start - Botni boshlash\n"
            "/help - Yordam\n"
            "/menu - Asosiy menyu\n"
            "/language - Tilni o'zgartirish\n\n"
            "<b>Arizalar:</b>\n"
            "‚Ä¢ Ariza yaratish - menyudan tanlang\n"
            "‚Ä¢ Mening arizalarim - arizalaringizni ko'ring\n\n"
            "<b>Yordam uchun:</b>\n"
            "Savol yoki muammo bo'lsa, administratorga murojaat qiling."
        )
    else:
        help_text = (
            "üìñ <b>–°–ø—Ä–∞–≤–∫–∞</b>\n\n"
            "<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
            "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
            "/help - –°–ø—Ä–∞–≤–∫–∞\n"
            "/menu - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
            "/language - –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫\n\n"
            "<b>–ó–∞—è–≤–∫–∏:</b>\n"
            "‚Ä¢ –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É - –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –º–µ–Ω—é\n"
            "‚Ä¢ –ú–æ–∏ –∑–∞—è–≤–∫–∏ - –ø—Ä–æ—Å–º–æ—Ç—Ä –≤–∞—à–∏—Ö –∑–∞—è–≤–æ–∫\n\n"
            "<b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b>\n"
            "–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )

    await message.answer(text=help_text)


@router.message(Command("menu"))
@router.message(F.text.in_(["üìã –ú–µ–Ω—é", "üìã Menyu"]))
async def cmd_menu(message: Message, user_role: str, language: str):
    """
    Handle /menu command and menu button.

    Args:
        message: Telegram message
        user_role: User role
        language: User language
    """
    text = "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:" if language == "ru" else "Asosiy menyu:"

    await message.answer(
        text=text,
        reply_markup=get_main_menu_keyboard(user_role, language)
    )


@router.message(Command("language"))
@router.message(F.text.in_(["‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "‚öôÔ∏è Sozlamalar"]))
async def cmd_language(message: Message, language: str):
    """
    Handle /language command and settings button.

    Args:
        message: Telegram message
        language: Current user language
    """
    text = (
        "üåê –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:\n"
        "üåê Tilni tanlang:"
    )

    await message.answer(
        text=text,
        reply_markup=get_language_keyboard()
    )


@router.callback_query(F.data.startswith("lang:"))
async def callback_language_selected(
    callback: CallbackQuery,
    user_id: str,
    token: str
):
    """
    Handle language selection callback.

    Args:
        callback: Callback query
        user_id: User ID from auth middleware
        token: JWT token from auth middleware
    """
    # Extract language from callback data
    lang_code = callback.data.split(":")[1]

    try:
        # Update user language in User Service
        from app.integrations.user_client import user_client

        await user_client.set_user_language(
            user_id=user_id,
            language=lang_code,
            token=token
        )

        # Success message
        if lang_code == "uz":
            success_text = "‚úÖ Til o'zgartirildi: O'zbek"
        else:
            success_text = "‚úÖ –Ø–∑—ã–∫ –∏–∑–º–µ–Ω—ë–Ω: –†—É—Å—Å–∫–∏–π"

        await callback.message.edit_text(text=success_text)
        await callback.answer()

        logger.info(f"User {user_id} changed language to {lang_code}")

    except Exception as e:
        logger.error(f"Failed to change language for user {user_id}: {e}")

        error_text = (
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —è–∑—ã–∫–∞\n"
            "‚ùå Tilni o'zgartirishda xatolik"
        )
        await callback.message.edit_text(text=error_text)
        await callback.answer()


@router.message(F.text.in_(["‚ùì –ü–æ–º–æ—â—å", "‚ùì Yordam"]))
async def button_help(message: Message, language: str):
    """
    Handle help button from menu.

    Args:
        message: Telegram message
        language: User language
    """
    await cmd_help(message, language)
