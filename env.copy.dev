# UK Management Bot - Docker Environment Configuration
# Скопируйте этот файл в .env и заполните реальными значениями

# ═══════════════════════════════════════════════════════════════
# ОБЯЗАТЕЛЬНЫЕ НАСТРОЙКИ БЕЗОПАСНОСТИ
# ═══════════════════════════════════════════════════════════════

# Telegram Bot Token (получить у @BotFather)
# ВАЖНО: Замените на ваш реальный токен!
BOT_TOKEN=8327391319:AAFuC8-uZlT9vEp3Z56JPxUmW89Ilfy205c
MEDIA_BOT_TOKEN=8211703425:AAGKHG992VwWPznmXEq-B4kn5P-AppLizp0

# КРИТИЧНО: Смените дефолтный пароль!
# Используйте: openssl rand -base64 32
ADMIN_PASSWORD=Inf%40%24afe

# КРИТИЧНО: Секрет для подписи инвайт-токенов
# Используйте: openssl rand -base64 64
INVITE_SECRET=MulOTz25MsSRbnhheg0MfOHGsXOGEInESVuA+/gp9XD6yiolZA+CHsCdUjFnGBko6QfYqmBCQa1W36Csgn0mGg==

# ═══════════════════════════════════════════════════════════════
# БАЗА ДАННЫХ (Docker автоматически настроит)
# ═══════════════════════════════════════════════════════════════

# PostgreSQL для Docker (настраивается автоматически)
DATABASE_URL=postgresql://uk_bot:uk_bot_password@postgres:5432/uk_management

POSTGRES_DB=uk_management
POSTGRES_USER=uk_bot
POSTGRES_PASSWORD=uk_bot_password

POSTGRES_PORT=5432


# ═══════════════════════════════════════════════════════════════
# REDIS (Docker автоматически настроит)
# ═══════════════════════════════════════════════════════════════

REDIS_URL=redis://redis:6379/0

# Redis connection string для Media Service (DB 1)
MEDIA_REDIS_URL=redis://redis:6379/1

# Использовать Redis для rate limiting
USE_REDIS_RATE_LIMIT=true

# Redis settings
REDIS_MAX_MEMORY=512mb
REDIS_POLICY=allkeys-lru

# Redis порт (по умолчанию 6379)
# Для production рекомендуется не exposed наружу (закомментируйте ports в docker-compose)
REDIS_PORT=6379


# ═══════════════════════════════════════════════════════════════
# АДМИНИСТРАТОРЫ И КАНАЛЫ
# ═══════════════════════════════════════════════════════════════

# Telegram ID администраторов (через запятую)
# ВАЖНО: Замените на реальные ID администраторов!
ADMIN_USER_IDS=48617336

# Канал для уведомлений (опционально)
TELEGRAM_CHANNEL_ID=@your_notifications_channel

# URL Media Service (внутренний для бота)
MEDIA_SERVICE_URL=http://media-service:8000

# Путь к файлу с каналами
CHANNELS_FILE_PATH=/app/data/channels.json

# Директория для загрузок
UPLOAD_DIR=/app/data/uploads

# Telegram каналы для хранения медиа (ID каналов с минусом)
# По умолчанию используются каналы из config.py, но можно переопределить
CHANNEL_REQUESTS=-1003091883002   # uk_media_requests_private
CHANNEL_REPORTS=-1002969942316    # uk_media_reports_private
CHANNEL_ARCHIVE=-1002725515580    # uk_media_archive_private
CHANNEL_BACKUP=-1002951349061     # uk_media_backup_private

# Максимальный размер файла (в байтах, 50MB по умолчанию)
MAX_FILE_SIZE=52428800

# Разрешенные расширения файлов
ALLOWED_EXTENSIONS=jpg,jpeg,png,gif,mp4,mov,avi,pdf,doc,docx,xls,xlsx,zip

# Media Service API ключ (опционально)
MEDIA_API_KEY=

# ═══════════════════════════════════════════════════════════════
# ПРОИЗВОДИТЕЛЬНОСТЬ И БЕЗОПАСНОСТЬ
# ═══════════════════════════════════════════════════════════════

# Production режим (ОБЯЗАТЕЛЬНО!)
DEBUG=false

# Уровень логирования (ERROR, WARNING, INFO, DEBUG)
LOG_LEVEL=INFO

# Rate limiting для /join команды
JOIN_RATE_LIMIT_WINDOW=600  # 10 минут
JOIN_RATE_LIMIT_MAX=3       # 3 попытки

# ═══════════════════════════════════════════════════════════════
# УВЕДОМЛЕНИЯ
# ═══════════════════════════════════════════════════════════════

# Включить уведомления
ENABLE_NOTIFICATIONS=true

# Количество попыток отправки уведомлений
NOTIFICATION_RETRY_COUNT=3

# ═══════════════════════════════════════════════════════════════
# MEDIA SERVICE ИНТЕГРАЦИЯ
# ═══════════════════════════════════════════════════════════════

# URL Media Service (localhost т.к. media service в отдельной сети)

# Таймаут запросов к Media Service (секунды)
MEDIA_SERVICE_TIMEOUT=30

# Включить Media Service
MEDIA_SERVICE_ENABLED=true

# ═══════════════════════════════════════════════════════════════
# GOOGLE SHEETS ИНТЕГРАЦИЯ (ОПЦИОНАЛЬНО)
# ═══════════════════════════════════════════════════════════════

# Путь к файлу с credentials от Google (внутри контейнера)
GOOGLE_SHEETS_CREDENTIALS_FILE=/app/credentials/google_credentials.json

# ID Google Spreadsheet для экспорта
GOOGLE_SHEETS_SPREADSHEET_ID=your_spreadsheet_id_here

# ═══════════════════════════════════════════════════════════════
# DOCKER СПЕЦИФИЧНЫЕ НАСТРОЙКИ
# ═══════════════════════════════════════════════════════════════

# Python путь в контейнере
PYTHONPATH=/app

# Небуферизованный вывод Python
PYTHONUNBUFFERED=1

# ═══════════════════════════════════════════════════════════════
# ПРОВЕРКА КОНФИГУРАЦИИ
# ═══════════════════════════════════════════════════════════════

# После настройки запустите: docker-compose up -d
# И проверьте логи: docker-compose logs app

#  ==================== LOGGING ====================
# Уровень логирования: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Формат логов: text, json
LOG_FORMAT=text

# Путь к файлу логов (опционально)
LOG_FILE=



# ==================== PERFORMANCE ====================
# Количество воркеров для обработки запросов
WORKERS_COUNT=2

# Размер пула соединений к БД
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=10

# Таймауты (в секундах)
REQUEST_TIMEOUT=30
DB_TIMEOUT=10
REDIS_TIMEOUT=5


