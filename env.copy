# UK Management Bot - Docker Environment Configuration
# Скопируйте этот файл в .env и заполните реальными значениями

# ═══════════════════════════════════════════════════════════════
# ОБЯЗАТЕЛЬНЫЕ НАСТРОЙКИ БЕЗОПАСНОСТИ
# ═══════════════════════════════════════════════════════════════

# Telegram Bot Token (получить у @BotFather)
# ВАЖНО: Замените на ваш реальный токен!
BOT_TOKEN=8327391319:AAFuC8-uZlT9vEp3Z56JPxUmW89Ilfy205c

# КРИТИЧНО: Смените дефолтный пароль!
# Используйте: openssl rand -base64 32
ADMIN_PASSWORD=Inf@$afe

# КРИТИЧНО: Секрет для подписи инвайт-токенов
# Используйте: openssl rand -base64 64
INVITE_SECRET=MulOTz25MsSRbnhheg0MfOHGsXOGEInESVuA+/gp9XD6yiolZA+CHsCdUjFnGBko6QfYqmBCQa1W36Csgn0mGg==

# ═══════════════════════════════════════════════════════════════
# БАЗА ДАННЫХ (Docker автоматически настроит)
# ═══════════════════════════════════════════════════════════════

# PostgreSQL для Docker (настраивается автоматически)
DATABASE_URL=postgresql://uk_bot:uk_bot_password@postgres:5432/uk_management

# ═══════════════════════════════════════════════════════════════
# REDIS (Docker автоматически настроит)
# ═══════════════════════════════════════════════════════════════

# Включить Redis для rate limiting
USE_REDIS_RATE_LIMIT=true

# Redis connection URL для Docker
REDIS_URL=redis://redis:6379/0

# ═══════════════════════════════════════════════════════════════
# АДМИНИСТРАТОРЫ И КАНАЛЫ
# ═══════════════════════════════════════════════════════════════

# Telegram ID администраторов (через запятую)
# ВАЖНО: Замените на реальные ID администраторов!
ADMIN_USER_IDS=48617336

# Канал для уведомлений (опционально)
TELEGRAM_CHANNEL_ID=@your_notifications_channel

# ═══════════════════════════════════════════════════════════════
# ПРОИЗВОДИТЕЛЬНОСТЬ И БЕЗОПАСНОСТЬ
# ═══════════════════════════════════════════════════════════════

# Production режим (ОБЯЗАТЕЛЬНО!)
DEBUG=false

# Уровень логирования (ERROR, WARNING, INFO, DEBUG)
LOG_LEVEL=INFO

# Rate limiting для /join команды
JOIN_RATE_LIMIT_WINDOW=600  # 10 минут
JOIN_RATE_LIMIT_MAX=3       # 3 попытки

# ═══════════════════════════════════════════════════════════════
# УВЕДОМЛЕНИЯ
# ═══════════════════════════════════════════════════════════════

# Включить уведомления
ENABLE_NOTIFICATIONS=true

# Количество попыток отправки уведомлений
NOTIFICATION_RETRY_COUNT=3

# ═══════════════════════════════════════════════════════════════
# MEDIA SERVICE ИНТЕГРАЦИЯ
# ═══════════════════════════════════════════════════════════════

# URL Media Service (localhost т.к. media service в отдельной сети)
MEDIA_SERVICE_URL=http://host.docker.internal:8001

# Таймаут запросов к Media Service (секунды)
MEDIA_SERVICE_TIMEOUT=30

# Включить Media Service
MEDIA_SERVICE_ENABLED=true

# ═══════════════════════════════════════════════════════════════
# GOOGLE SHEETS ИНТЕГРАЦИЯ (ОПЦИОНАЛЬНО)
# ═══════════════════════════════════════════════════════════════

# Путь к файлу с credentials от Google (внутри контейнера)
GOOGLE_SHEETS_CREDENTIALS_FILE=/app/credentials/google_credentials.json

# ID Google Spreadsheet для экспорта
GOOGLE_SHEETS_SPREADSHEET_ID=your_spreadsheet_id_here

# ═══════════════════════════════════════════════════════════════
# DOCKER СПЕЦИФИЧНЫЕ НАСТРОЙКИ
# ═══════════════════════════════════════════════════════════════

# Python путь в контейнере
PYTHONPATH=/app

# Небуферизованный вывод Python
PYTHONUNBUFFERED=1

# ═══════════════════════════════════════════════════════════════
# ПРОВЕРКА КОНФИГУРАЦИИ
# ═══════════════════════════════════════════════════════════════

# После настройки запустите: docker-compose up -d
# И проверьте логи: docker-compose logs app
