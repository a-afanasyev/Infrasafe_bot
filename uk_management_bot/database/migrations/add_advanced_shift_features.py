"""
–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —Å–º–µ–Ω

Revision ID: add_advanced_shift_features
Revises: add_request_assignment_fields
Create Date: 2025-09-04 00:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers
revision = 'add_advanced_shift_features'
down_revision = 'add_request_assignment_fields'
branch_labels = None
depends_on = None


def upgrade():
    """–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π –∏ —Ç–∞–±–ª–∏—Ü –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —Å–º–µ–Ω"""
    
    # ========== –†–ê–°–®–ò–†–ï–ù–ò–ï –¢–ê–ë–õ–ò–¶–´ SHIFTS ==========
    print("üîÑ –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã shifts...")
    
    # –ù–æ–≤—ã–µ –ø–æ–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    op.add_column('shifts', sa.Column('planned_start_time', sa.DateTime(timezone=True), nullable=True))
    op.add_column('shifts', sa.Column('planned_end_time', sa.DateTime(timezone=True), nullable=True))
    op.add_column('shifts', sa.Column('shift_template_id', sa.Integer(), nullable=True))
    op.add_column('shifts', sa.Column('shift_type', sa.String(50), nullable=True, server_default='regular'))
    
    # –ù–æ–≤—ã–µ –ø–æ–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    op.add_column('shifts', sa.Column('specialization_focus', postgresql.JSON(astext_type=sa.Text()), nullable=True))
    op.add_column('shifts', sa.Column('coverage_areas', postgresql.JSON(astext_type=sa.Text()), nullable=True))
    op.add_column('shifts', sa.Column('geographic_zone', sa.String(100), nullable=True))
    
    # –ù–æ–≤—ã–µ –ø–æ–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–≥—Ä—É–∑–∫–∏
    op.add_column('shifts', sa.Column('max_requests', sa.Integer(), nullable=False, server_default='10'))
    op.add_column('shifts', sa.Column('current_request_count', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('shifts', sa.Column('priority_level', sa.Integer(), nullable=False, server_default='1'))
    
    # –ù–æ–≤—ã–µ –ø–æ–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    op.add_column('shifts', sa.Column('completed_requests', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('shifts', sa.Column('average_completion_time', sa.Float(), nullable=True))
    op.add_column('shifts', sa.Column('average_response_time', sa.Float(), nullable=True))
    op.add_column('shifts', sa.Column('efficiency_score', sa.Float(), nullable=True))
    op.add_column('shifts', sa.Column('quality_rating', sa.Float(), nullable=True))
    
    print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ shifts —Ä–∞—Å—à–∏—Ä–µ–Ω–∞")
    
    # ========== –°–û–ó–î–ê–ù–ò–ï –¢–ê–ë–õ–ò–¶–´ SHIFT_TEMPLATES ==========
    print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã shift_templates...")
    
    op.create_table(
        'shift_templates',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('name', sa.String(100), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        
        # –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏
        sa.Column('start_hour', sa.Integer(), nullable=False),
        sa.Column('start_minute', sa.Integer(), nullable=False, server_default='0'),
        sa.Column('duration_hours', sa.Integer(), nullable=False, server_default='8'),
        
        # –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è–º
        sa.Column('required_specializations', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column('min_executors', sa.Integer(), nullable=False, server_default='1'),
        sa.Column('max_executors', sa.Integer(), nullable=False, server_default='3'),
        sa.Column('default_max_requests', sa.Integer(), nullable=False, server_default='10'),
        
        # –ó–æ–Ω—ã –ø–æ–∫—Ä—ã—Ç–∏—è
        sa.Column('coverage_areas', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column('geographic_zone', sa.String(100), nullable=True),
        sa.Column('priority_level', sa.Integer(), nullable=False, server_default='1'),
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è
        sa.Column('auto_create', sa.Boolean(), nullable=False, server_default='false'),
        sa.Column('days_of_week', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column('advance_days', sa.Integer(), nullable=False, server_default='7'),
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        sa.Column('is_active', sa.Boolean(), nullable=False, server_default='true'),
        sa.Column('default_shift_type', sa.String(50), nullable=False, server_default='regular'),
        sa.Column('settings', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        
        # –°–∏—Å—Ç–µ–º–Ω—ã–µ –ø–æ–ª—è
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.func.now()),
        sa.Column('updated_at', sa.DateTime(timezone=True), onupdate=sa.func.now())
    )
    
    print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ shift_templates —Å–æ–∑–¥–∞–Ω–∞")
    
    # ========== –°–û–ó–î–ê–ù–ò–ï –¢–ê–ë–õ–ò–¶–´ SHIFT_SCHEDULES ==========
    print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã shift_schedules...")
    
    op.create_table(
        'shift_schedules',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('date', sa.Date(), nullable=False, unique=True),
        
        # –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∫—Ä—ã—Ç–∏—è
        sa.Column('planned_coverage', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column('actual_coverage', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column('planned_specialization_coverage', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column('actual_specialization_coverage', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        
        # –ü—Ä–æ–≥–Ω–æ–∑—ã –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
        sa.Column('predicted_requests', sa.Integer(), nullable=True),
        sa.Column('actual_requests', sa.Integer(), nullable=False, server_default='0'),
        sa.Column('prediction_accuracy', sa.Float(), nullable=True),
        sa.Column('recommended_shifts', sa.Integer(), nullable=True),
        sa.Column('actual_shifts', sa.Integer(), nullable=False, server_default='0'),
        
        # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
        sa.Column('optimization_score', sa.Float(), nullable=True),
        sa.Column('coverage_percentage', sa.Float(), nullable=True),
        sa.Column('load_balance_score', sa.Float(), nullable=True),
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        sa.Column('special_conditions', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column('manual_adjustments', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column('notes', sa.String(500), nullable=True),
        
        # –°—Ç–∞—Ç—É—Å –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
        sa.Column('status', sa.String(50), nullable=False, server_default='draft'),
        sa.Column('created_by', sa.Integer(), nullable=True),
        sa.Column('auto_generated', sa.Boolean(), nullable=False, server_default='false'),
        sa.Column('version', sa.Integer(), nullable=False, server_default='1'),
        
        # –°–∏—Å—Ç–µ–º–Ω—ã–µ –ø–æ–ª—è
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.func.now()),
        sa.Column('updated_at', sa.DateTime(timezone=True), onupdate=sa.func.now())
    )
    
    print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ shift_schedules —Å–æ–∑–¥–∞–Ω–∞")
    
    # ========== –°–û–ó–î–ê–ù–ò–ï –¢–ê–ë–õ–ò–¶–´ SHIFT_ASSIGNMENTS ==========
    print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã shift_assignments...")
    
    op.create_table(
        'shift_assignments',
        sa.Column('id', sa.Integer(), primary_key=True),
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ —Å–≤—è–∑–∏
        sa.Column('shift_id', sa.Integer(), nullable=False),
        sa.Column('request_number', sa.String(10), nullable=False),
        
        # –ü—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
        sa.Column('assignment_priority', sa.Integer(), nullable=False, server_default='1'),
        sa.Column('estimated_duration', sa.Integer(), nullable=True),
        sa.Column('assignment_order', sa.Integer(), nullable=True),
        
        # ML-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏ –æ—Ü–µ–Ω–∫–∏
        sa.Column('ai_score', sa.Float(), nullable=True),
        sa.Column('confidence_level', sa.Float(), nullable=True),
        sa.Column('specialization_match_score', sa.Float(), nullable=True),
        sa.Column('geographic_score', sa.Float(), nullable=True),
        sa.Column('workload_score', sa.Float(), nullable=True),
        
        # –°—Ç–∞—Ç—É—Å –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
        sa.Column('status', sa.String(50), nullable=False, server_default='assigned'),
        sa.Column('auto_assigned', sa.Boolean(), nullable=False, server_default='false'),
        sa.Column('confirmed_by_executor', sa.Boolean(), nullable=False, server_default='false'),
        
        # –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏
        sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.func.now()),
        sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
        sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
        sa.Column('planned_start_at', sa.DateTime(timezone=True), nullable=True),
        sa.Column('planned_completion_at', sa.DateTime(timezone=True), nullable=True),
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        sa.Column('assignment_reason', sa.String(200), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('executor_instructions', sa.Text(), nullable=True),
        
        # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        sa.Column('actual_duration', sa.Integer(), nullable=True),
        sa.Column('execution_quality_rating', sa.Float(), nullable=True),
        sa.Column('had_issues', sa.Boolean(), nullable=False, server_default='false'),
        sa.Column('issues_description', sa.Text(), nullable=True),
        
        # –°–∏—Å—Ç–µ–º–Ω—ã–µ –ø–æ–ª—è
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.func.now()),
        sa.Column('updated_at', sa.DateTime(timezone=True), onupdate=sa.func.now())
    )
    
    print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ shift_assignments —Å–æ–∑–¥–∞–Ω–∞")
    
    # ========== –°–û–ó–î–ê–ù–ò–ï –ò–ù–î–ï–ö–°–û–í ==========
    print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...")
    
    # –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è shifts
    op.create_index('idx_shifts_planned_start', 'shifts', ['planned_start_time'])
    op.create_index('idx_shifts_shift_type', 'shifts', ['shift_type'])
    op.create_index('idx_shifts_priority', 'shifts', ['priority_level'])
    op.create_index('idx_shifts_template_id', 'shifts', ['shift_template_id'])
    
    # –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è shift_schedules
    op.create_index('idx_shift_schedules_date', 'shift_schedules', ['date'])
    op.create_index('idx_shift_schedules_status', 'shift_schedules', ['status'])
    op.create_index('idx_shift_schedules_created_by', 'shift_schedules', ['created_by'])
    
    # –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è shift_assignments
    op.create_index('idx_shift_assignments_shift_id', 'shift_assignments', ['shift_id'])
    op.create_index('idx_shift_assignments_request_number', 'shift_assignments', ['request_number'])
    op.create_index('idx_shift_assignments_status', 'shift_assignments', ['status'])
    op.create_index('idx_shift_assignments_assigned_at', 'shift_assignments', ['assigned_at'])
    op.create_index('idx_shift_assignments_priority', 'shift_assignments', ['assignment_priority'])
    
    # –°–æ—Å—Ç–∞–≤–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
    op.create_index('idx_shifts_status_type', 'shifts', ['status', 'shift_type'])
    op.create_index('idx_assignments_shift_status', 'shift_assignments', ['shift_id', 'status'])
    
    print("‚úÖ –ò–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞–Ω—ã")
    
    # ========== –°–û–ó–î–ê–ù–ò–ï –í–ù–ï–®–ù–ò–• –ö–õ–Æ–ß–ï–ô ==========
    print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π...")
    
    # –í–Ω–µ—à–Ω–∏–µ –∫–ª—é—á–∏ –¥–ª—è shifts
    op.create_foreign_key(
        'fk_shifts_template_id', 'shifts', 'shift_templates', 
        ['shift_template_id'], ['id'], ondelete='SET NULL'
    )
    
    # –í–Ω–µ—à–Ω–∏–µ –∫–ª—é—á–∏ –¥–ª—è shift_schedules
    op.create_foreign_key(
        'fk_shift_schedules_created_by', 'shift_schedules', 'users',
        ['created_by'], ['id'], ondelete='SET NULL'
    )
    
    # –í–Ω–µ—à–Ω–∏–µ –∫–ª—é—á–∏ –¥–ª—è shift_assignments
    op.create_foreign_key(
        'fk_shift_assignments_shift_id', 'shift_assignments', 'shifts',
        ['shift_id'], ['id'], ondelete='CASCADE'
    )
    op.create_foreign_key(
        'fk_shift_assignments_request_number', 'shift_assignments', 'requests',
        ['request_number'], ['request_number'], ondelete='CASCADE'
    )
    
    print("‚úÖ –í–Ω–µ—à–Ω–∏–µ –∫–ª—é—á–∏ —Å–æ–∑–¥–∞–Ω—ã")
    
    # ========== –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–£–©–ï–°–¢–í–£–Æ–©–ò–• –î–ê–ù–ù–´–• ==========
    print("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö...")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–º–µ–Ω
    op.execute("""
        UPDATE shifts 
        SET 
            shift_type = 'regular',
            max_requests = 10,
            current_request_count = 0,
            priority_level = 1,
            completed_requests = 0
        WHERE shift_type IS NULL
    """)
    
    print("‚úÖ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
    print("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞!")


def downgrade():
    """–û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ - —É–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π –∏ —Ç–∞–±–ª–∏—Ü"""
    
    print("üîÑ –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏...")
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π
    op.drop_constraint('fk_shifts_template_id', 'shifts', type_='foreignkey')
    op.drop_constraint('fk_shift_schedules_created_by', 'shift_schedules', type_='foreignkey')
    op.drop_constraint('fk_shift_assignments_shift_id', 'shift_assignments', type_='foreignkey')
    op.drop_constraint('fk_shift_assignments_request_number', 'shift_assignments', type_='foreignkey')
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤
    op.drop_index('idx_shifts_planned_start', 'shifts')
    op.drop_index('idx_shifts_shift_type', 'shifts')
    op.drop_index('idx_shifts_priority', 'shifts')
    op.drop_index('idx_shifts_template_id', 'shifts')
    op.drop_index('idx_shift_schedules_date', 'shift_schedules')
    op.drop_index('idx_shift_schedules_status', 'shift_schedules')
    op.drop_index('idx_shift_schedules_created_by', 'shift_schedules')
    op.drop_index('idx_shift_assignments_shift_id', 'shift_assignments')
    op.drop_index('idx_shift_assignments_request_number', 'shift_assignments')
    op.drop_index('idx_shift_assignments_status', 'shift_assignments')
    op.drop_index('idx_shift_assignments_assigned_at', 'shift_assignments')
    op.drop_index('idx_shift_assignments_priority', 'shift_assignments')
    op.drop_index('idx_shifts_status_type', 'shifts')
    op.drop_index('idx_assignments_shift_status', 'shift_assignments')
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
    op.drop_table('shift_assignments')
    op.drop_table('shift_schedules')
    op.drop_table('shift_templates')
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π –∏–∑ shifts
    columns_to_drop = [
        'planned_start_time', 'planned_end_time', 'shift_template_id', 'shift_type',
        'specialization_focus', 'coverage_areas', 'geographic_zone',
        'max_requests', 'current_request_count', 'priority_level',
        'completed_requests', 'average_completion_time', 'average_response_time',
        'efficiency_score', 'quality_rating'
    ]
    
    for column in columns_to_drop:
        op.drop_column('shifts', column)
    
    print("‚úÖ –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω")