"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""
import logging
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from uk_management_bot.utils.helpers import get_text

logger = logging.getLogger(__name__)


def get_profile_edit_keyboard(language: str = "ru", user=None) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º —Ç–µ–∫—É—â–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π"""
    try:
        logger.info(f"–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è —è–∑—ã–∫–∞: {language}")

        builder = InlineKeyboardBuilder()

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
        current_phone = user.phone if user and user.phone else "–Ω–µ —É–∫–∞–∑–∞–Ω"
        current_first_name = user.first_name if user and user.first_name else "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"
        current_last_name = user.last_name if user and user.last_name else "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫
        if user and user.language:
            current_lang = "üá∑üá∫ RU" if user.language == "ru" else "üá∫üáø UZ"
        else:
            current_lang = "üá∑üá∫ RU"

        # –ö–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        cancel_text = get_text('buttons.cancel', language=language)

        logger.debug(f"–¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è: phone={current_phone}, language={current_lang}, first_name={current_first_name}, last_name={current_last_name}")

        # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ —è–∑—ã–∫–∞ —Å —Ç–µ–∫—É—â–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
        builder.add(InlineKeyboardButton(
            text=f"üì± {current_phone}",
            callback_data="edit_phone"
        ))

        builder.add(InlineKeyboardButton(
            text=f"üåê {current_lang}",
            callback_data="edit_language"
        ))

        # –ö–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –§–ò–û —Å —Ç–µ–∫—É—â–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
        builder.add(InlineKeyboardButton(
            text=f"üë§ {current_first_name}",
            callback_data="edit_first_name"
        ))

        builder.add(InlineKeyboardButton(
            text=f"üë§ {current_last_name}",
            callback_data="edit_last_name"
        ))

        # –ö–Ω–æ–ø–∫–∞ "–ú–æ–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã" –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–≤–∞—Ä—Ç–∏—Ä–∞–º–∏ –∏–∑ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞
        builder.add(InlineKeyboardButton(
            text="üè† –ú–æ–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã",
            callback_data="my_apartments"
        ))

        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
        builder.add(InlineKeyboardButton(
            text=f"‚ùå {cancel_text}",
            callback_data="cancel_profile_edit"
        ))

        builder.adjust(2, 2, 1, 1)
        keyboard = builder.as_markup()
        
        logger.info("–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞")
        return keyboard
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: {e}")
        logger.error(f"–¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
        raise


def get_language_choice_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞"""
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∏ —è–∑—ã–∫–æ–≤ —Å —É—á–µ—Ç–æ–º —Ç–µ–∫—É—â–µ–≥–æ —è–∑—ã–∫–∞
    if language == "uz":
        builder.add(InlineKeyboardButton(
            text="üá∑üá∫ –†—É—Å—Å–∫–∏–π",
            callback_data="set_language_ru"
        ))
        
        builder.add(InlineKeyboardButton(
            text="üá∫üáø O'zbek ‚úì",
            callback_data="set_language_uz"
        ))
        
        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã –Ω–∞ —É–∑–±–µ–∫—Å–∫–æ–º
        builder.add(InlineKeyboardButton(
            text=f"‚ùå {get_text('buttons.cancel', language=language)}",
            callback_data="cancel_language_choice"
        ))
    else:
        builder.add(InlineKeyboardButton(
            text="üá∑üá∫ –†—É—Å—Å–∫–∏–π ‚úì",
            callback_data="set_language_ru"
        ))
        
        builder.add(InlineKeyboardButton(
            text="üá∫üáø O'zbek",
            callback_data="set_language_uz"
        ))
        
        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º
        builder.add(InlineKeyboardButton(
            text=f"‚ùå {get_text('buttons.cancel', language=language)}",
            callback_data="cancel_language_choice"
        ))
    
    builder.adjust(2, 1)
    return builder.as_markup()


def get_address_type_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∞–¥—Ä–µ—Å–∞"""
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∏ —Ç–∏–ø–æ–≤ –∞–¥—Ä–µ—Å–æ–≤
    builder.add(InlineKeyboardButton(
        text="üè† –î–æ–º–∞—à–Ω–∏–π –∞–¥—Ä–µ—Å",
        callback_data="address_type_home"
    ))
    
    builder.add(InlineKeyboardButton(
        text="üè¢ –ê–¥—Ä–µ—Å –∫–≤–∞—Ä—Ç–∏—Ä—ã",
        callback_data="address_type_apartment"
    ))
    
    builder.add(InlineKeyboardButton(
        text="üèòÔ∏è –ê–¥—Ä–µ—Å –¥–≤–æ—Ä–∞",
        callback_data="address_type_yard"
    ))
    
    # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
    builder.add(InlineKeyboardButton(
        text="‚ùå –û—Ç–º–µ–Ω–∞",
        callback_data="cancel_address_type"
    ))
    
    builder.adjust(1, 1, 1)
    return builder.as_markup()


def get_cancel_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
    """–ü—Ä–æ—Å—Ç–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã"""
    builder = InlineKeyboardBuilder()
    
    builder.add(InlineKeyboardButton(
        text=f"‚ùå {get_text('buttons.cancel', language=language)}",
        callback_data="cancel_input"
    ))
    
    return builder.as_markup()
