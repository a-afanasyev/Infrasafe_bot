"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–º –∞–¥—Ä–µ—Å–æ–≤
"""
from typing import List, Optional
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder

from uk_management_bot.database.models import Yard, Building, Apartment, UserApartment


# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ê–î–†–ï–°–ê–ú–ò
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

def get_address_management_menu() -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–º –∞–¥—Ä–µ—Å–æ–≤"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="üèò –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–æ—Ä–∞–º–∏", callback_data="addr_yards_list")
    )
    builder.row(
        InlineKeyboardButton(text="üè¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–¥–∞–Ω–∏—è–º–∏", callback_data="addr_buildings_list")
    )
    builder.row(
        InlineKeyboardButton(text="üè† –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–≤–∞—Ä—Ç–∏—Ä–∞–º–∏", callback_data="addr_apartments_list")
    )
    builder.row(
        InlineKeyboardButton(text="üìã –ú–æ–¥–µ—Ä–∞—Ü–∏—è –∑–∞—è–≤–æ–∫", callback_data="addr_moderation_list")
    )
    builder.row(
        InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="addr_stats")
    )
    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_menu")
    )

    return builder.as_markup()


# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# –î–í–û–†–´
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

def get_yards_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–≤–æ—Ä–∞–º–∏"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥–≤–æ—Ä", callback_data="addr_yard_create")
    )
    builder.row(
        InlineKeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ –¥–≤–æ—Ä–æ–≤", callback_data="addr_yards_list")
    )
    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="addr_menu")
    )

    return builder.as_markup()


def get_yards_list_keyboard(yards: List[Yard], page: int = 0, page_size: int = 10) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –¥–≤–æ—Ä–æ–≤ (—Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π)

    Args:
        yards: –°–ø–∏—Å–æ–∫ –¥–≤–æ—Ä–æ–≤
        page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–Ω–∞—á–∏–Ω–∞—è —Å 0)
        page_size: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    """
    builder = InlineKeyboardBuilder()

    start_idx = page * page_size
    end_idx = start_idx + page_size
    yards_page = yards[start_idx:end_idx]

    # –°–ø–∏—Å–æ–∫ –¥–≤–æ—Ä–æ–≤
    for yard in yards_page:
        status_icon = "‚úÖ" if yard.is_active else "‚ùå"
        buildings_info = f" ({yard.buildings_count} –∑–¥.)" if hasattr(yard, 'buildings_count') else ""

        builder.row(
            InlineKeyboardButton(
                text=f"{status_icon} {yard.name}{buildings_info}",
                callback_data=f"addr_yard_view:{yard.id}"
            )
        )

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    pagination_buttons = []
    if page > 0:
        pagination_buttons.append(
            InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"addr_yards_page:{page - 1}")
        )
    if end_idx < len(yards):
        pagination_buttons.append(
            InlineKeyboardButton(text="–í–ø–µ—Ä–µ–¥ ‚ñ∂Ô∏è", callback_data=f"addr_yards_page:{page + 1}")
        )

    if pagination_buttons:
        builder.row(*pagination_buttons)

    # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    builder.row(
        InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥–≤–æ—Ä", callback_data="addr_yard_create")
    )
    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="addr_menu")
    )

    return builder.as_markup()


def get_yard_details_keyboard(yard_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–≤–æ—Ä–∞"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"addr_yard_edit:{yard_id}")
    )
    builder.row(
        InlineKeyboardButton(text="üè¢ –ó–¥–∞–Ω–∏—è", callback_data=f"addr_buildings_by_yard:{yard_id}")
    )
    builder.row(
        InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"addr_yard_delete:{yard_id}")
    )
    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ö —Å–ø–∏—Å–∫—É –¥–≤–æ—Ä–æ–≤", callback_data="addr_yards_list")
    )

    return builder.as_markup()


def get_yard_edit_keyboard(yard_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–≤–æ—Ä–∞"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="üìù –ù–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"addr_yard_edit_name:{yard_id}")
    )
    builder.row(
        InlineKeyboardButton(text="üìÑ –û–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"addr_yard_edit_desc:{yard_id}")
    )
    builder.row(
        InlineKeyboardButton(text="üìç GPS –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã", callback_data=f"addr_yard_edit_gps:{yard_id}")
    )
    builder.row(
        InlineKeyboardButton(text="üîÑ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", callback_data=f"addr_yard_toggle:{yard_id}")
    )
    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"addr_yard_view:{yard_id}")
    )

    return builder.as_markup()


# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# –ó–î–ê–ù–ò–Ø
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

def get_buildings_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–¥–∞–Ω–∏—è–º–∏"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–¥–∞–Ω–∏–µ", callback_data="addr_building_create")
    )
    builder.row(
        InlineKeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ –∑–¥–∞–Ω–∏–π", callback_data="addr_buildings_list")
    )
    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="addr_menu")
    )

    return builder.as_markup()


def get_buildings_list_keyboard(
    buildings: List[Building],
    page: int = 0,
    page_size: int = 10,
    yard_id: Optional[int] = None
) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–¥–∞–Ω–∏–π (—Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π)

    Args:
        buildings: –°–ø–∏—Å–æ–∫ –∑–¥–∞–Ω–∏–π
        page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        page_size: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        yard_id: ID –¥–≤–æ—Ä–∞ (–µ—Å–ª–∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –¥–≤–æ—Ä—É)
    """
    builder = InlineKeyboardBuilder()

    start_idx = page * page_size
    end_idx = start_idx + page_size
    buildings_page = buildings[start_idx:end_idx]

    # –°–ø–∏—Å–æ–∫ –∑–¥–∞–Ω–∏–π
    for building in buildings_page:
        status_icon = "‚úÖ" if building.is_active else "‚ùå"
        apartments_info = f" ({building.apartments_count} –∫–≤.)" if hasattr(building, 'apartments_count') else ""

        # –û–±—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω—ã–π –∞–¥—Ä–µ—Å
        address_short = building.address[:40] + "..." if len(building.address) > 40 else building.address

        builder.row(
            InlineKeyboardButton(
                text=f"{status_icon} {address_short}{apartments_info}",
                callback_data=f"addr_building_view:{building.id}"
            )
        )

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    pagination_buttons = []
    callback_prefix = f"addr_buildings_by_yard_page:{yard_id}" if yard_id else "addr_buildings_page"

    if page > 0:
        pagination_buttons.append(
            InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"{callback_prefix}:{page - 1}")
        )
    if end_idx < len(buildings):
        pagination_buttons.append(
            InlineKeyboardButton(text="–í–ø–µ—Ä–µ–¥ ‚ñ∂Ô∏è", callback_data=f"{callback_prefix}:{page + 1}")
        )

    if pagination_buttons:
        builder.row(*pagination_buttons)

    # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    builder.row(
        InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–¥–∞–Ω–∏–µ", callback_data="addr_building_create")
    )

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    if yard_id:
        builder.row(
            InlineKeyboardButton(text="‚óÄÔ∏è –ö –¥–≤–æ—Ä—É", callback_data=f"addr_yard_view:{yard_id}")
        )
    else:
        builder.row(
            InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="addr_menu")
        )

    return builder.as_markup()


def get_building_details_keyboard(building_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–¥–∞–Ω–∏—è"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"addr_building_edit:{building_id}")
    )
    builder.row(
        InlineKeyboardButton(text="üè† –ö–≤–∞—Ä—Ç–∏—Ä—ã", callback_data=f"addr_apartments_by_building:{building_id}")
    )
    builder.row(
        InlineKeyboardButton(text="üî¢ –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–≤–∞—Ä—Ç–∏—Ä", callback_data=f"addr_building_autofill:{building_id}")
    )
    builder.row(
        InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"addr_building_delete:{building_id}")
    )
    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ö —Å–ø–∏—Å–∫—É –∑–¥–∞–Ω–∏–π", callback_data="addr_buildings_list")
    )

    return builder.as_markup()


def get_building_edit_keyboard(building_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–¥–∞–Ω–∏—è"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="üìù –ê–¥—Ä–µ—Å", callback_data=f"addr_building_edit_addr:{building_id}")
    )
    builder.row(
        InlineKeyboardButton(text="üèò –î–≤–æ—Ä", callback_data=f"addr_building_edit_yard:{building_id}")
    )
    builder.row(
        InlineKeyboardButton(text="üìç GPS –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã", callback_data=f"addr_building_edit_gps:{building_id}")
    )
    builder.row(
        InlineKeyboardButton(text="üö™ –ü–æ–¥—ä–µ–∑–¥—ã", callback_data=f"addr_building_edit_entrances:{building_id}"),
        InlineKeyboardButton(text="üèó –≠—Ç–∞–∂–∏", callback_data=f"addr_building_edit_floors:{building_id}")
    )
    builder.row(
        InlineKeyboardButton(text="üìÑ –û–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"addr_building_edit_desc:{building_id}")
    )
    builder.row(
        InlineKeyboardButton(text="üîÑ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", callback_data=f"addr_building_toggle:{building_id}")
    )
    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"addr_building_view:{building_id}")
    )

    return builder.as_markup()


# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# –ö–í–ê–†–¢–ò–†–´
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

def get_apartments_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–≤–∞—Ä—Ç–∏—Ä–∞–º–∏"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É", callback_data="addr_apartment_create")
    )
    builder.row(
        InlineKeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ –∫–≤–∞—Ä—Ç–∏—Ä", callback_data="addr_apartments_list")
    )
    builder.row(
        InlineKeyboardButton(text="üîç –ü–æ–∏—Å–∫ –∫–≤–∞—Ä—Ç–∏—Ä—ã", callback_data="addr_apartment_search")
    )
    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="addr_menu")
    )

    return builder.as_markup()


def get_apartments_list_keyboard(
    apartments: List[Apartment],
    page: int = 0,
    page_size: int = 10,
    building_id: Optional[int] = None
) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–≤–∞—Ä—Ç–∏—Ä (—Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π)

    Args:
        apartments: –°–ø–∏—Å–æ–∫ –∫–≤–∞—Ä—Ç–∏—Ä
        page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        page_size: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        building_id: ID –∑–¥–∞–Ω–∏—è (–µ—Å–ª–∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –∑–¥–∞–Ω–∏—é)
    """
    builder = InlineKeyboardBuilder()

    start_idx = page * page_size
    end_idx = start_idx + page_size
    apartments_page = apartments[start_idx:end_idx]

    # –°–ø–∏—Å–æ–∫ –∫–≤–∞—Ä—Ç–∏—Ä
    for apartment in apartments_page:
        status_icon = "‚úÖ" if apartment.is_active else "‚ùå"
        residents_info = ""

        if hasattr(apartment, 'residents_count'):
            residents_info = f" ({apartment.residents_count} –∂–∏—Ç.)"

        # –ü–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å –∏–ª–∏ –∫–æ—Ä–æ—Ç–∫–∏–π
        if hasattr(apartment, 'full_address'):
            address = apartment.full_address[:50] + "..." if len(apartment.full_address) > 50 else apartment.full_address
        else:
            address = f"–ö–≤–∞—Ä—Ç–∏—Ä–∞ {apartment.apartment_number}"

        builder.row(
            InlineKeyboardButton(
                text=f"{status_icon} {address}{residents_info}",
                callback_data=f"addr_apartment_view:{apartment.id}"
            )
        )

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    pagination_buttons = []
    callback_prefix = f"addr_apartments_by_building_page:{building_id}" if building_id else "addr_apartments_page"

    if page > 0:
        pagination_buttons.append(
            InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"{callback_prefix}:{page - 1}")
        )
    if end_idx < len(apartments):
        pagination_buttons.append(
            InlineKeyboardButton(text="–í–ø–µ—Ä–µ–¥ ‚ñ∂Ô∏è", callback_data=f"{callback_prefix}:{page + 1}")
        )

    if pagination_buttons:
        builder.row(*pagination_buttons)

    # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    builder.row(
        InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É", callback_data="addr_apartment_create")
    )

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    if building_id:
        builder.row(
            InlineKeyboardButton(text="‚óÄÔ∏è –ö –∑–¥–∞–Ω–∏—é", callback_data=f"addr_building_view:{building_id}")
        )
    else:
        builder.row(
            InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="addr_menu")
        )

    return builder.as_markup()


def get_apartment_details_keyboard(apartment_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"addr_apartment_edit:{apartment_id}")
    )
    builder.row(
        InlineKeyboardButton(text="üë• –ñ–∏—Ç–µ–ª–∏", callback_data=f"addr_apartment_residents:{apartment_id}")
    )
    builder.row(
        InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"addr_apartment_delete:{apartment_id}")
    )
    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ö —Å–ø–∏—Å–∫—É –∫–≤–∞—Ä—Ç–∏—Ä", callback_data="addr_apartments_list")
    )

    return builder.as_markup()


def get_apartment_edit_keyboard(apartment_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–≤–∞—Ä—Ç–∏—Ä—ã"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="üî¢ –ù–æ–º–µ—Ä", callback_data=f"addr_apartment_edit_number:{apartment_id}")
    )
    builder.row(
        InlineKeyboardButton(text="üè¢ –ó–¥–∞–Ω–∏–µ", callback_data=f"addr_apartment_edit_building:{apartment_id}")
    )
    builder.row(
        InlineKeyboardButton(text="üö™ –ü–æ–¥—ä–µ–∑–¥", callback_data=f"addr_apartment_edit_entrance:{apartment_id}"),
        InlineKeyboardButton(text="üèó –≠—Ç–∞–∂", callback_data=f"addr_apartment_edit_floor:{apartment_id}")
    )
    builder.row(
        InlineKeyboardButton(text="üõè –ö–æ–º–Ω–∞—Ç—ã", callback_data=f"addr_apartment_edit_rooms:{apartment_id}"),
        InlineKeyboardButton(text="üìê –ü–ª–æ—â–∞–¥—å", callback_data=f"addr_apartment_edit_area:{apartment_id}")
    )
    builder.row(
        InlineKeyboardButton(text="üìÑ –û–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"addr_apartment_edit_desc:{apartment_id}")
    )
    builder.row(
        InlineKeyboardButton(text="üîÑ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", callback_data=f"addr_apartment_toggle:{apartment_id}")
    )
    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"addr_apartment_view:{apartment_id}")
    )

    return builder.as_markup()


# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# –ú–û–î–ï–†–ê–¶–ò–Ø –ó–ê–Ø–í–û–ö
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

def get_moderation_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∑–∞—è–≤–æ–∫ –Ω–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="üìã –ó–∞—è–≤–∫–∏ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏", callback_data="addr_moderation_list")
    )
    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="addr_menu")
    )

    return builder.as_markup()


def get_moderation_requests_keyboard(
    requests: List[UserApartment],
    page: int = 0,
    page_size: int = 10
) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞—è–≤–æ–∫ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é

    Args:
        requests: –°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ UserApartment —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º pending
        page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        page_size: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    """
    builder = InlineKeyboardBuilder()

    start_idx = page * page_size
    end_idx = start_idx + page_size
    requests_page = requests[start_idx:end_idx]

    # –°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫
    for req in requests_page:
        user_name = f"{req.user.first_name or ''} {req.user.last_name or ''}".strip()
        if not user_name:
            user_name = f"ID: {req.user.telegram_id}"

        apartment_info = f"–∫–≤. {req.apartment.apartment_number}"
        if req.apartment.building:
            building_short = req.apartment.building.address[:30] + "..." if len(req.apartment.building.address) > 30 else req.apartment.building.address
            apartment_info = f"{apartment_info}, {building_short}"

        # –í—Ä–µ–º—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏
        days_ago = (req.requested_at.date() - req.requested_at.date()).days if req.requested_at else 0
        time_info = f" ({days_ago}–¥)" if days_ago > 0 else ""

        builder.row(
            InlineKeyboardButton(
                text=f"üë§ {user_name} ‚Üí {apartment_info}{time_info}",
                callback_data=f"addr_moderation_view:{req.id}"
            )
        )

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    pagination_buttons = []
    if page > 0:
        pagination_buttons.append(
            InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"addr_moderation_page:{page - 1}")
        )
    if end_idx < len(requests):
        pagination_buttons.append(
            InlineKeyboardButton(text="–í–ø–µ—Ä–µ–¥ ‚ñ∂Ô∏è", callback_data=f"addr_moderation_page:{page + 1}")
        )

    if pagination_buttons:
        builder.row(*pagination_buttons)

    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="addr_menu")
    )

    return builder.as_markup()


def get_moderation_request_details_keyboard(user_apartment_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞—è–≤–∫–∏"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"addr_moderation_approve:{user_apartment_id}"),
        InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"addr_moderation_reject:{user_apartment_id}")
    )
    builder.row(
        InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data=f"user_profile:{user_apartment_id}")
    )
    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ö —Å–ø–∏—Å–∫—É –∑–∞—è–≤–æ–∫", callback_data="addr_moderation_list")
    )

    return builder.as_markup()


# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–ò–ï –ö–õ–ê–í–ò–ê–¢–£–†–´
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

def get_user_apartment_selection_keyboard(
    items: List,
    item_type: str,
    callback_prefix: str
) -> InlineKeyboardMarkup:
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–≤–æ—Ä–∞/–∑–¥–∞–Ω–∏—è/–∫–≤–∞—Ä—Ç–∏—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º

    Args:
        items: –°–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ (Yard, Building –∏–ª–∏ Apartment)
        item_type: –¢–∏–ø –æ–±—ä–µ–∫—Ç–∞ ("yard", "building", "apartment")
        callback_prefix: –ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è callback_data
    """
    builder = InlineKeyboardBuilder()

    for item in items:
        if item_type == "yard":
            text = item.name
            value = item.id
        elif item_type == "building":
            text = item.address[:50] + "..." if len(item.address) > 50 else item.address
            value = item.id
        elif item_type == "apartment":
            text = f"–ö–≤–∞—Ä—Ç–∏—Ä–∞ {item.apartment_number}"
            if hasattr(item, 'floor') and item.floor:
                text += f", {item.floor} —ç—Ç–∞–∂"
            if hasattr(item, 'entrance') and item.entrance:
                text += f", –ø–æ–¥—ä–µ–∑–¥ {item.entrance}"
            value = item.id
        else:
            continue

        builder.row(
            InlineKeyboardButton(
                text=text,
                callback_data=f"{callback_prefix}:{value}"
            )
        )

    builder.row(
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_apartment_selection")
    )

    return builder.as_markup()


def get_my_apartments_keyboard(user_apartments: List[UserApartment]) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–≤–∞—Ä—Ç–∏—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    builder = InlineKeyboardBuilder()

    for ua in user_apartments:
        status_icon = {
            'pending': '‚è≥',
            'approved': '‚úÖ',
            'rejected': '‚ùå'
        }.get(ua.status, '‚ùì')

        primary_icon = '‚≠ê' if ua.is_primary else ''
        owner_icon = 'üëë' if ua.is_owner else ''

        text = f"{status_icon}{primary_icon}{owner_icon} {ua.apartment.full_address if hasattr(ua.apartment, 'full_address') else f'–ö–≤–∞—Ä—Ç–∏—Ä–∞ {ua.apartment.apartment_number}'}"

        builder.row(
            InlineKeyboardButton(
                text=text,
                callback_data=f"my_apartment_view:{ua.id}"
            )
        )

    builder.row(
        InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É", callback_data="add_my_apartment")
    )
    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="profile_menu")
    )

    return builder.as_markup()


# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# –û–ë–©–ò–ï –ö–õ–ê–í–ò–ê–¢–£–†–´
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

def get_confirmation_keyboard(confirm_callback: str, cancel_callback: str) -> InlineKeyboardMarkup:
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="‚úÖ –î–∞", callback_data=confirm_callback),
        InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data=cancel_callback)
    )

    return builder.as_markup()


def get_skip_or_cancel_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∏ –û—Ç–º–µ–Ω–∞"""
    builder = ReplyKeyboardBuilder()

    builder.row(
        KeyboardButton(text="‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"),
        KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞")
    )

    return builder.as_markup(resize_keyboard=True)


def get_cancel_keyboard_inline() -> InlineKeyboardMarkup:
    """Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_action")
    )

    return builder.as_markup()
