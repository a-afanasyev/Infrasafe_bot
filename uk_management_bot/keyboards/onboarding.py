"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

–°–æ–¥–µ—Ä–∂–∏—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è:
- –í—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
- –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
- –ù–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –ø—Ä–æ—Ü–µ—Å—Å—É –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
"""

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from uk_management_bot.database.models.user_verification import DocumentType
from uk_management_bot.utils.helpers import get_text

def get_document_type_keyboard(language: str = "ru") -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    
    Args:
        language: –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        
    Returns:
        ReplyKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    """
    keyboard = [
        [
            KeyboardButton(text="üìÑ –ü–∞—Å–ø–æ—Ä—Ç"),
            KeyboardButton(text="üè† –ö–∞–¥–∞—Å—Ç—Ä–æ–≤–∞—è –≤—ã–ø–∏—Å–∫–∞")
        ],
        [
            KeyboardButton(text="üìã –î–æ–≥–æ–≤–æ—Ä –∞—Ä–µ–Ω–¥—ã"),
            KeyboardButton(text="üìÑ –î—Ä—É–≥–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã")
        ],
        [
            KeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã"),
            KeyboardButton(text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥")
        ]
    ]
    
    return ReplyKeyboardMarkup(
        keyboard=keyboard,
        resize_keyboard=True,
        one_time_keyboard=False
    )

def get_document_confirmation_keyboard(language: str = "ru") -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    
    Args:
        language: –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        
    Returns:
        ReplyKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    """
    keyboard = [
        [
            KeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É"),
            KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")
        ],
        [
            KeyboardButton(text="üîÑ –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥—Ä—É–≥–æ–π –¥–æ–∫—É–º–µ–Ω—Ç")
        ]
    ]
    
    return ReplyKeyboardMarkup(
        keyboard=keyboard,
        resize_keyboard=True,
        one_time_keyboard=False
    )

def get_onboarding_completion_keyboard(language: str = "ru") -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
    
    Args:
        language: –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        
    Returns:
        ReplyKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    """
    keyboard = [
        [
            KeyboardButton(text="üìÑ –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã"),
            KeyboardButton(text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥")
        ]
    ]
    
    return ReplyKeyboardMarkup(
        keyboard=keyboard,
        resize_keyboard=True,
        one_time_keyboard=False
    )

def get_document_type_inline_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    
    Args:
        language: –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        
    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    """
    keyboard = [
        [
            InlineKeyboardButton(
                text="üìÑ –ü–∞—Å–ø–æ—Ä—Ç",
                callback_data="doc_type_passport"
            ),
            InlineKeyboardButton(
                text="üè† –ö–∞–¥–∞—Å—Ç—Ä–æ–≤–∞—è –≤—ã–ø–∏—Å–∫–∞",
                callback_data="doc_type_property_deed"
            )
        ],
        [
            InlineKeyboardButton(
                text="üìã –î–æ–≥–æ–≤–æ—Ä –∞—Ä–µ–Ω–¥—ã",
                callback_data="doc_type_rental_agreement"
            ),
            InlineKeyboardButton(
                text="üìÑ –î—Ä—É–≥–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã",
                callback_data="doc_type_other"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã",
                callback_data="doc_type_skip"
            )
        ]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_document_management_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏
    
    Args:
        language: –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        
    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    """
    keyboard = [
        [
            InlineKeyboardButton(
                text="üìÑ –î–æ–±–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç",
                callback_data="add_document"
            ),
            InlineKeyboardButton(
                text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å",
                callback_data="complete_onboarding"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã",
                callback_data="skip_documents"
            )
        ]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_document_type_from_text(text: str) -> DocumentType:
    """
    –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø–æ —Ç–µ–∫—Å—Ç—É –∫–Ω–æ–ø–∫–∏
    
    Args:
        text: –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
        
    Returns:
        DocumentType enum –∑–Ω–∞—á–µ–Ω–∏–µ
    """
    text_lower = text.lower()
    
    if "–ø–∞—Å–ø–æ—Ä—Ç" in text_lower:
        return DocumentType.PASSPORT
    elif "–∫–∞–¥–∞—Å—Ç—Ä–æ–≤–∞—è" in text_lower or "–≤—ã–ø–∏—Å–∫–∞" in text_lower:
        return DocumentType.PROPERTY_DEED
    elif "–¥–æ–≥–æ–≤–æ—Ä" in text_lower or "–∞—Ä–µ–Ω–¥–∞" in text_lower:
        return DocumentType.RENTAL_AGREEMENT
    elif "–¥—Ä—É–≥–∏–µ" in text_lower or "other" in text_lower:
        return DocumentType.OTHER
    else:
        return DocumentType.OTHER

def get_document_type_name(document_type: DocumentType, language: str = "ru") -> str:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ
    
    Args:
        document_type: –¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞
        language: –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        
    Returns:
        –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    """
    document_names = {
        DocumentType.PASSPORT: "–ü–∞—Å–ø–æ—Ä—Ç",
        DocumentType.PROPERTY_DEED: "–ö–∞–¥–∞—Å—Ç—Ä–æ–≤–∞—è –≤—ã–ø–∏—Å–∫–∞",
        DocumentType.RENTAL_AGREEMENT: "–î–æ–≥–æ–≤–æ—Ä –∞—Ä–µ–Ω–¥—ã",
        DocumentType.UTILITY_BILL: "–ö–≤–∏—Ç–∞–Ω—Ü–∏—è –ñ–ö–•",
        DocumentType.OTHER: "–î—Ä—É–≥–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã"
    }
    
    return document_names.get(document_type, "–î—Ä—É–≥–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã")
