"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫ –Ω–∞ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ
–°–æ–∑–¥–∞–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫
"""

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import List

from uk_management_bot.database.models.user import User
from uk_management_bot.utils.helpers import get_text
from uk_management_bot.utils.request_helpers import RequestCallbackHelper

def get_request_assignment_keyboard(request_number: str, language: str = "ru") -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∑–∞—è–≤–∫–∏
    
    Args:
        request_number: –ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYMMDD-NNN
        language: –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
    """
    keyboard = [
        [
            InlineKeyboardButton(
                text=get_text("request_assignment.group_assignment", language=language),
                callback_data=RequestCallbackHelper.create_callback_data_with_request_number("assign_group_", request_number)
            )
        ],
        [
            InlineKeyboardButton(
                text=get_text("request_assignment.individual_assignment", language=language),
                callback_data=RequestCallbackHelper.create_callback_data_with_request_number("assign_individual_", request_number)
            )
        ],
        [
            InlineKeyboardButton(
                text="‚ùå –û—Ç–º–µ–Ω–∞",
                callback_data="cancel_assignment"
            )
        ]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_specialization_selection_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
    
    Args:
        language: –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–π
    """
    specializations = [
        "—Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫",
        "—ç–ª–µ–∫—Ç—Ä–∏–∫", 
        "—É–±–æ—Ä—â–∏–∫",
        "–¥–≤–æ—Ä–Ω–∏–∫",
        "–æ—Ö—Ä–∞–Ω–Ω–∏–∫",
        "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç"
    ]
    
    keyboard = []
    row = []
    
    for spec in specializations:
        row.append(InlineKeyboardButton(
            text=spec.title(),
            callback_data=f"specialization_{spec}"
        ))
        
        if len(row) == 2:  # 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥—É
            keyboard.append(row)
            row = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∫–Ω–æ–ø–∫–∏
    if row:
        keyboard.append(row)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã
    keyboard.append([
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="cancel_assignment"
        )
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_executor_selection_keyboard(executors: List[User], language: str = "ru") -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
    
    Args:
        executors: –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π
        language: –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π
    """
    keyboard = []
    
    for executor in executors:
        keyboard.append([
            InlineKeyboardButton(
                text=f"üë§ {executor.full_name}",
                callback_data=f"executor_{executor.id}"
            )
        ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã
    keyboard.append([
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="cancel_assignment"
        )
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_assignment_confirmation_keyboard(assignment_type: str, language: str = "ru") -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
    
    Args:
        assignment_type: –¢–∏–ø –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è ('group' –∏–ª–∏ 'individual')
        language: –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    """
    keyboard = [
        [
            InlineKeyboardButton(
                text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
                callback_data="confirm_assignment"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚ùå –û—Ç–º–µ–Ω–∞",
                callback_data="cancel_assignment"
            )
        ]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_request_actions_keyboard(request_number: str, language: str = "ru") -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π —Å –∑–∞—è–≤–∫–æ–π (–¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤)

    Args:
        request_number: –ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏
        language: –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞

    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏
    """
    keyboard = [
        [
            InlineKeyboardButton(
                text="üìã –ù–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞—è–≤–∫—É",
                callback_data=f"assign_request_{request_number}"
            )
        ],
        [
            InlineKeyboardButton(
                text="üë• –ü—Ä–æ—Å–º–æ—Ç—Ä –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π",
                callback_data=f"view_assignments_{request_number}"
            )
        ],
        [
            InlineKeyboardButton(
                text="üìù –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π",
                callback_data=f"add_comment_{request_number}"
            )
        ],
        [
            InlineKeyboardButton(
                text="üîÑ –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å",
                callback_data=f"change_status_{request_number}"
            )
        ]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_executor_requests_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–ú–æ–∏ –∑–∞—è–≤–∫–∏" –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π
    
    Args:
        language: –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
    """
    keyboard = [
        [
            InlineKeyboardButton(
                text="üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏",
                callback_data="my_requests"
            )
        ],
        [
            InlineKeyboardButton(
                text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                callback_data="executor_stats"
            )
        ],
        [
            InlineKeyboardButton(
                text="üîô –ù–∞–∑–∞–¥",
                callback_data="back_to_main"
            )
        ]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_request_executor_actions_keyboard(request_number: int, status: str, language: str = "ru") -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è —Å –∑–∞—è–≤–∫–æ–π
    
    Args:
        request_number: ID –∑–∞—è–≤–∫–∏
        status: –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏
        language: –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
    """
    keyboard = []
    
    # –î–µ–π—Å—Ç–≤–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
    if status == "–ü—Ä–∏–Ω—è—Ç–∞":
        keyboard.append([
            InlineKeyboardButton(
                text="üîÑ –í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É",
                callback_data=f"take_to_work_{request_number}"
            )
        ])
    elif status == "–í —Ä–∞–±–æ—Ç–µ":
        keyboard.extend([
            [
                InlineKeyboardButton(
                    text="üõí –ó–∞–∫—É–ø–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤",
                    callback_data=f"purchase_materials_{request_number}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ùì –ó–∞–ø—Ä–æ—Å–∏—Ç—å —É—Ç–æ—á–Ω–µ–Ω–∏–µ",
                    callback_data=f"request_clarification_{request_number}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É",
                    callback_data=f"complete_work_{request_number}"
                )
            ]
        ])
    elif status == "–ó–∞–∫—É–ø":
        keyboard.append([
            InlineKeyboardButton(
                text="üîÑ –í–µ—Ä–Ω—É—Ç—å –≤ —Ä–∞–±–æ—Ç—É",
                callback_data=f"return_to_work_{request_number}"
            )
        ])
    
    # –û–±—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
    keyboard.extend([
        [
            InlineKeyboardButton(
                text="üìù –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π",
                callback_data=f"add_comment_{request_number}"
            )
        ],
        [
            InlineKeyboardButton(
                text="üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤",
                callback_data=f"view_comments_{request_number}"
            )
        ],
        [
            InlineKeyboardButton(
                text="üîô –ù–∞–∑–∞–¥ –∫ –∑–∞—è–≤–∫–∞–º",
                callback_data="back_to_requests"
            )
        ]
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)
