#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è Simple Google Sheets Sync (–±–µ–∑ API)

–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ—Å—Ç—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ CSV —Ñ–∞–π–ª—ã –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Google Sheets API.
"""

import asyncio
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ PYTHONPATH
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))
sys.path.insert(0, str(project_root / "uk_management_bot"))

from integrations.simple_sheets_sync import SimpleSheetsSync


async def test_simple_sheets_initialization():
    """–¢–µ—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ SimpleSheetsSync"""
    print("üß™ –¢–µ—Å—Ç 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SimpleSheetsSync")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –ø—É—Å—Ç–æ–π —Å—Å—ã–ª–∫–æ–π
        sync = SimpleSheetsSync("", "test_requests.csv")
        print(f"‚úÖ SimpleSheetsSync —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"   - Sync enabled: {sync.sync_enabled}")
        print(f"   - Spreadsheet URL: {sync.spreadsheet_url}")
        print(f"   - CSV file path: {sync.csv_file_path}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ä–µ–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π
        test_url = "https://docs.google.com/spreadsheets/d/test123"
        sync2 = SimpleSheetsSync(test_url, "test_requests2.csv")
        print(f"   - With URL sync enabled: {sync2.sync_enabled}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ SimpleSheetsSync: {e}")
        return False


async def test_csv_export():
    """–¢–µ—Å—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ CSV"""
    print("\nüß™ –¢–µ—Å—Ç 2: –≠–∫—Å–ø–æ—Ä—Ç –≤ CSV")
    
    try:
        sync = SimpleSheetsSync("", "test_export.csv")
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        test_requests = [
            {
                'id': 1,
                'created_at': '2024-12-07 10:30:00',
                'status': '–ù–æ–≤–∞—è',
                'category': '–≠–ª–µ–∫—Ç—Ä–∏–∫–∞',
                'address': '—É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, 1',
                'description': '–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ 1',
                'urgency': '–û–±—ã—á–Ω–∞—è',
                'applicant_id': 1,
                'applicant_name': '–¢–µ—Å—Ç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1',
                'executor_id': None,
                'executor_name': '',
                'assigned_at': '',
                'completed_at': '',
                'comments': '',
                'photo_urls': ''
            },
            {
                'id': 2,
                'created_at': '2024-12-07 11:00:00',
                'status': '–í —Ä–∞–±–æ—Ç–µ',
                'category': '–°–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∞',
                'address': '—É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, 2',
                'description': '–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ 2',
                'urgency': '–°—Ä–æ—á–Ω–∞—è',
                'applicant_id': 2,
                'applicant_name': '–¢–µ—Å—Ç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2',
                'executor_id': 3,
                'executor_name': '–¢–µ—Å—Ç –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å',
                'assigned_at': '2024-12-07 11:30:00',
                'completed_at': '',
                'comments': '–ù–∞–∑–Ω–∞—á–µ–Ω–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é',
                'photo_urls': ''
            }
        ]
        
        # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        success = await sync.export_requests_to_csv(test_requests)
        
        if success:
            print(f"‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –≤ CSV —É—Å–ø–µ—à–µ–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª
            csv_path = Path("test_export.csv")
            if csv_path.exists():
                print(f"   - –§–∞–π–ª —Å–æ–∑–¥–∞–Ω: {csv_path}")
                print(f"   - –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {csv_path.stat().st_size} –±–∞–π—Ç")
                
                # –ß–∏—Ç–∞–µ–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                with open(csv_path, 'r', encoding='utf-8') as f:
                    lines = f.readlines()
                    print(f"   - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫: {len(lines)}")
                    print(f"   - –ó–∞–≥–æ–ª–æ–≤–∫–∏: {lines[0].strip()}")
                
                return True
            else:
                print(f"‚ùå –§–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω")
                return False
        else:
            print(f"‚ùå –≠–∫—Å–ø–æ—Ä—Ç –Ω–µ —É–¥–∞–ª—Å—è")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ CSV: {e}")
        return False


async def test_add_request():
    """–¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏"""
    print("\nüß™ –¢–µ—Å—Ç 3: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏")
    
    try:
        sync = SimpleSheetsSync("", "test_add.csv")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É
        new_request = {
            'id': 3,
            'created_at': '2024-12-07 12:00:00',
            'status': '–ù–æ–≤–∞—è',
            'category': '–û—Ç–æ–ø–ª–µ–Ω–∏–µ',
            'address': '—É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, 3',
            'description': '–ù–æ–≤–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞',
            'urgency': '–û–±—ã—á–Ω–∞—è',
            'applicant_id': 4,
            'applicant_name': '–ù–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
            'executor_id': None,
            'executor_name': '',
            'assigned_at': '',
            'completed_at': '',
            'comments': '',
            'photo_urls': ''
        }
        
        success = await sync.add_request_to_csv(new_request)
        
        if success:
            print(f"‚úÖ –ó–∞—è–≤–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª
            csv_path = Path("test_add.csv")
            if csv_path.exists():
                with open(csv_path, 'r', encoding='utf-8') as f:
                    lines = f.readlines()
                    print(f"   - –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: {len(lines)}")
                    print(f"   - –ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–æ–∫–∞: {lines[-1].strip()}")
                
                return True
            else:
                print(f"‚ùå –§–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω")
                return False
        else:
            print(f"‚ùå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏: {e}")
        return False


async def test_update_request():
    """–¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏"""
    print("\nüß™ –¢–µ—Å—Ç 4: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏")
    
    try:
        sync = SimpleSheetsSync("", "test_update.csv")
        
        # –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏
        initial_requests = [
            {
                'id': 1,
                'created_at': '2024-12-07 10:30:00',
                'status': '–ù–æ–≤–∞—è',
                'category': '–≠–ª–µ–∫—Ç—Ä–∏–∫–∞',
                'address': '—É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, 1',
                'description': '–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞',
                'urgency': '–û–±—ã—á–Ω–∞—è',
                'applicant_id': 1,
                'applicant_name': '–¢–µ—Å—Ç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                'executor_id': None,
                'executor_name': '',
                'assigned_at': '',
                'completed_at': '',
                'comments': '',
                'photo_urls': ''
            }
        ]
        
        await sync.export_requests_to_csv(initial_requests)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞—è–≤–∫—É
        changes = {
            'status': '–í —Ä–∞–±–æ—Ç–µ',
            'executor_id': 2,
            'executor_name': '–ù–æ–≤—ã–π –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å',
            'comments': '–ó–∞—è–≤–∫–∞ –≤–∑—è—Ç–∞ –≤ —Ä–∞–±–æ—Ç—É'
        }
        
        success = await sync.update_request_in_csv(1, changes)
        
        if success:
            print(f"‚úÖ –ó–∞—è–≤–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            csv_path = Path("test_update.csv")
            with open(csv_path, 'r', encoding='utf-8') as f:
                lines = f.readlines()
                if len(lines) >= 2:
                    updated_line = lines[1].strip()
                    print(f"   - –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞: {updated_line}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–∏–ª—Å—è
                    if '–í —Ä–∞–±–æ—Ç–µ' in updated_line:
                        print(f"   - –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
                        return True
                    else:
                        print(f"   - –°—Ç–∞—Ç—É—Å –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω")
                        return False
                else:
                    print(f"   - –§–∞–π–ª –ø—É—Å—Ç–æ–π")
                    return False
        else:
            print(f"‚ùå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏: {e}")
        return False


async def test_statistics():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    print("\nüß™ –¢–µ—Å—Ç 5: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    
    try:
        sync = SimpleSheetsSync("", "test_stats.csv")
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏
        test_requests = [
            {
                'id': 1,
                'created_at': '2024-12-07 10:30:00',
                'status': '–ù–æ–≤–∞—è',
                'category': '–≠–ª–µ–∫—Ç—Ä–∏–∫–∞',
                'address': '—É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, 1',
                'description': '–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞',
                'urgency': '–û–±—ã—á–Ω–∞—è',
                'applicant_id': 1,
                'applicant_name': '–¢–µ—Å—Ç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                'executor_id': None,
                'executor_name': '',
                'assigned_at': '',
                'completed_at': '',
                'comments': '',
                'photo_urls': ''
            }
        ]
        
        await sync.export_requests_to_csv(test_requests)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = await sync.get_statistics()
        
        print(f"‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞")
        print(f"   - –í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫: {stats['total_requests']}")
        print(f"   - –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {stats['file_size']} –±–∞–π—Ç")
        print(f"   - –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: {stats['last_modified']}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        return False


async def test_backup():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"""
    print("\nüß™ –¢–µ—Å—Ç 6: –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è")
    
    try:
        sync = SimpleSheetsSync("", "test_backup.csv")
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏
        test_requests = [
            {
                'id': 1,
                'created_at': '2024-12-07 10:30:00',
                'status': '–ù–æ–≤–∞—è',
                'category': '–≠–ª–µ–∫—Ç—Ä–∏–∫–∞',
                'address': '—É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, 1',
                'description': '–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞',
                'urgency': '–û–±—ã—á–Ω–∞—è',
                'applicant_id': 1,
                'applicant_name': '–¢–µ—Å—Ç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                'executor_id': None,
                'executor_name': '',
                'assigned_at': '',
                'completed_at': '',
                'comments': '',
                'photo_urls': ''
            }
        ]
        
        await sync.export_requests_to_csv(test_requests)
        
        # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
        backup_path = await sync.create_backup()
        
        if backup_path:
            print(f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞")
            print(f"   - –ü—É—Ç—å –∫ backup: {backup_path}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            backup_file = Path(backup_path)
            if backup_file.exists():
                print(f"   - Backup —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                print(f"   - –†–∞–∑–º–µ—Ä backup: {backup_file.stat().st_size} –±–∞–π—Ç")
                return True
            else:
                print(f"   - Backup —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False
        else:
            print(f"‚ùå –°–æ–∑–¥–∞–Ω–∏–µ backup –Ω–µ —É–¥–∞–ª–æ—Å—å")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è backup: {e}")
        return False


async def cleanup_test_files():
    """–û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    print("\nüßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤")
    
    test_files = [
        "test_export.csv",
        "test_add.csv", 
        "test_update.csv",
        "test_stats.csv",
        "test_backup.csv"
    ]
    
    # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã
    for file_name in test_files:
        file_path = Path(file_name)
        if file_path.exists():
            file_path.unlink()
            print(f"   - –£–¥–∞–ª–µ–Ω: {file_name}")
    
    # –£–¥–∞–ª—è–µ–º backup —Ñ–∞–π–ª—ã
    for file_path in Path(".").glob("test_backup_backup_*.csv"):
        file_path.unlink()
        print(f"   - –£–¥–∞–ª–µ–Ω backup: {file_path.name}")


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ Simple Google Sheets Sync (–±–µ–∑ API)")
    print("=" * 60)
    
    tests = [
        test_simple_sheets_initialization,
        test_csv_export,
        test_add_request,
        test_update_request,
        test_statistics,
        test_backup
    ]
    
    passed = 0
    total = len(tests)
    
    for test in tests:
        try:
            result = await test()
            if result:
                passed += 1
        except Exception as e:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
    
    # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã
    await cleanup_test_files()
    
    print("\n" + "=" * 60)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ Simple Google Sheets Sync –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
        print("\nüìã –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞:")
        print("   - –ù–µ —Ç—Ä–µ–±—É–µ—Ç API –∫–ª—é—á–µ–π")
        print("   - –ù–µ —Ç—Ä–µ–±—É–µ—Ç Service Account")
        print("   - –ü—Ä–æ—Å—Ç–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞")
        print("   - –†–∞–±–æ—Ç–∞–µ—Ç —Å—Ä–∞–∑—É")
        print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("   1. –°–æ–∑–¥–∞–π—Ç–µ Google Sheets —Ç–∞–±–ª–∏—Ü—É")
        print("   2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—É–±–ª–∏—á–Ω—ã–π –¥–æ—Å—Ç—É–ø")
        print("   3. –û–±–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("   4. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ CSV –≤ Google Sheets")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
        print("üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
    
    return passed == total


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    success = asyncio.run(main())
    sys.exit(0 if success else 1)
