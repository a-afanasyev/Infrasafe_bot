#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–∫—É–ø–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
"""

import sys
import os
import logging

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ path –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
sys.path.insert(0, '/app')

from uk_management_bot.database.session import get_db
from uk_management_bot.database.models.request import Request
from uk_management_bot.database.models.user import User
from uk_management_bot.database.models.request_comment import RequestComment
from uk_management_bot.services.comment_service import CommentService

logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO)

def test_purchase_materials():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∑–∞–∫—É–ø–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤"""
    db = next(get_db())
    
    print('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –∑–∞–∫—É–ø–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤...')
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        user = db.query(User).filter(User.telegram_id == 12345).first()
        if not user:
            user = User(
                telegram_id=12345,
                first_name='Test',
                last_name='User', 
                username='testuser',
                role='admin'
            )
            db.add(user)
            db.commit()
            db.refresh(user)
            print(f'üë§ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.id}')
        else:
            print(f'üë§ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.id}')
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞—è–≤–∫—É
        request_number = Request.generate_request_number(db)
        request = Request(
            request_number=request_number,
            user_id=user.id,
            category='–°–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∞',
            address='–¢–µ—Å—Ç–æ–≤–∞—è —É–ª–∏—Ü–∞, 1',
            description='–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–∫—É–ø–∞',
            status='–ó–∞–∫—É–ø'
        )
        db.add(request)
        db.commit()
        db.refresh(request)
        
        print(f'üìù –°–æ–∑–¥–∞–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞: {request.request_number}')
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º CommentService —Å –Ω–æ–≤—ã–º –Ω–æ–º–µ—Ä–æ–º
        comment_service = CommentService(db)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ –∑–∞–∫—É–ø–µ
        materials = '–¢—Ä—É–±—ã - 5 –º–µ—Ç—Ä–æ–≤\n–§–∏—Ç–∏–Ω–≥–∏ - 10 —à—Ç—É–∫\n–ö–ª–µ–π - 1 —Ç—é–±–∏–∫'
        comment = comment_service.add_purchase_comment(request.request_number, user.id, materials)
        
        print(f'‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ –∑–∞–∫—É–ø–µ –¥–æ–±–∞–≤–ª–µ–Ω: ID {comment.id}')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∑–∞—è–≤–∫–µ
        saved_comment = db.query(RequestComment).filter(RequestComment.id == comment.id).first()
        print(f'‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω –¥–ª—è –∑–∞—è–≤–∫–∏: {saved_comment.request_number}')
        print(f'‚úÖ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {saved_comment.comment_text[:50]}...')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑—å —Å –∑–∞—è–≤–∫–æ–π
        linked_request = db.query(Request).filter(Request.request_number == saved_comment.request_number).first()
        if linked_request:
            print(f'‚úÖ –°–≤—è–∑—å —Å –∑–∞—è–≤–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {linked_request.request_number}')
            print(f'‚úÖ –°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏: {linked_request.status}')
        else:
            print('‚ùå –û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å –∑–∞—è–≤–∫–æ–π')
            return False
        
        print('\nüéâ –£–°–ü–ï–®–ù–û: –°–∏—Å—Ç–µ–º–∞ –∑–∞–∫—É–ø–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç!')
        print('üéâ –£–°–ü–ï–®–ù–û: CommentService —Å–æ–≤–º–µ—Å—Ç–∏–º —Å –Ω–æ–≤–æ–π –Ω—É–º–µ—Ä–∞—Ü–∏–µ–π!')
        print('üéâ –£–°–ü–ï–®–ù–û: –û—à–∏–±–∫–∞ "type object Request has no attribute id" –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!')
        
        return True
        
    except Exception as e:
        print(f'‚ùå –û–®–ò–ë–ö–ê –≤ —Ç–µ—Å—Ç–µ: {e}')
        logger.exception('–û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –∑–∞–∫—É–ø–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤')
        return False
    finally:
        db.close()

if __name__ == '__main__':
    success = test_purchase_materials()
    sys.exit(0 if success else 1)
