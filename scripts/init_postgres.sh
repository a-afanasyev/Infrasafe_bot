#!/bin/bash

# UK Management Bot - PostgreSQL Initialization Script
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ SQL —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
# –§–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–º–µ—â–µ–Ω –≤ /docker-entrypoint-initdb.d/ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è

set -e  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üöÄ Starting PostgreSQL initialization for UK Management Bot..."

# =============================================================================
# –ü–†–û–í–ï–†–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö –ë–ê–ó–ï –î–ê–ù–ù–´–•
# =============================================================================

# –ñ–¥–µ–º –ø–æ–∫–∞ PostgreSQL –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤
echo "‚è≥ Waiting for PostgreSQL to be ready..."
until pg_isready -U postgres -h localhost; do
    echo "PostgreSQL is not ready yet, waiting..."
    sleep 2
done

echo "‚úÖ PostgreSQL is ready!"

# =============================================================================
# –ü–†–û–í–ï–†–ö–ê –°–û–ó–î–ê–ù–ò–Ø –ë–ê–ó–´ –î–ê–ù–ù–´–•
# =============================================================================

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö uk_management —Å–æ–∑–¥–∞–Ω–∞
echo "üîç Checking if uk_management database exists..."
if psql -U postgres -lqt | cut -d \| -f 1 | grep -qw uk_management; then
    echo "‚úÖ Database uk_management exists"
else
    echo "‚ùå Database uk_management not found, creating..."
    createdb -U postgres uk_management
    echo "‚úÖ Database uk_management created"
fi

# =============================================================================
# –ü–†–û–í–ï–†–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
# =============================================================================

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å uk_bot —Å–æ–∑–¥–∞–Ω
echo "üîç Checking if user uk_bot exists..."
if psql -U postgres -t -c "SELECT 1 FROM pg_roles WHERE rolname='uk_bot'" | grep -q 1; then
    echo "‚úÖ User uk_bot exists"
else
    echo "‚ùå User uk_bot not found, creating..."
    psql -U postgres -c "CREATE USER uk_bot WITH PASSWORD 'uk_bot_password' NOSUPERUSER NOCREATEDB NOCREATEROLE INHERIT LOGIN;"
    echo "‚úÖ User uk_bot created"
fi

# =============================================================================
# –ù–ê–°–¢–†–û–ô–ö–ê –ü–†–ê–í –î–û–°–¢–£–ü–ê
# =============================================================================

echo "üîê Setting up database permissions..."

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö uk_management
psql -U postgres -d uk_management << 'EOF'
-- –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é uk_bot
GRANT CONNECT ON DATABASE uk_management TO uk_bot;
GRANT USAGE ON SCHEMA public TO uk_bot;
GRANT CREATE ON SCHEMA public TO uk_bot;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO uk_bot;
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO uk_bot;
GRANT ALL PRIVILEGES ON ALL FUNCTIONS IN SCHEMA public TO uk_bot;

-- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –±—É–¥—É—â–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO uk_bot;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON SEQUENCES TO uk_bot;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON FUNCTIONS TO uk_bot;

-- –°–æ–∑–¥–∞–µ–º —Å—Ö–µ–º—É audit –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
CREATE SCHEMA IF NOT EXISTS audit;

-- –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —Å—Ö–µ–º—É audit
GRANT USAGE ON SCHEMA audit TO uk_bot;
GRANT CREATE ON SCHEMA audit TO uk_bot;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA audit TO uk_bot;
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA audit TO uk_bot;
EOF

echo "‚úÖ Database permissions configured"

# =============================================================================
# –ü–†–û–í–ï–†–ö–ê –†–ê–°–®–ò–†–ï–ù–ò–ô
# =============================================================================

echo "üîß Checking and enabling PostgreSQL extensions..."

psql -U postgres -d uk_management << 'EOF'
-- –í–∫–ª—é—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
CREATE EXTENSION IF NOT EXISTS "pg_trgm";
CREATE EXTENSION IF NOT EXISTS "pg_stat_statements";

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã
SELECT extname, extversion FROM pg_extension WHERE extname IN ('uuid-ossp', 'pg_trgm', 'pg_stat_statements');
EOF

echo "‚úÖ PostgreSQL extensions enabled"

# =============================================================================
# –°–û–ó–î–ê–ù–ò–ï –¢–ê–ë–õ–ò–¶ –î–õ–Ø –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê
# =============================================================================

echo "üìä Creating monitoring tables..."

psql -U postgres -d uk_management << 'EOF'
-- –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
CREATE TABLE IF NOT EXISTS connection_log (
    id SERIAL PRIMARY KEY,
    connection_time TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    client_addr INET,
    client_port INTEGER,
    application_name TEXT,
    username TEXT
);

-- –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
CREATE INDEX IF NOT EXISTS idx_connection_log_time ON connection_log(connection_time);
CREATE INDEX IF NOT EXISTS idx_connection_log_username ON connection_log(username);

-- –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —Ç–∞–±–ª–∏—Ü—É –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
GRANT ALL PRIVILEGES ON TABLE connection_log TO uk_bot;
GRANT USAGE, SELECT ON SEQUENCE connection_log_id_seq TO uk_bot;

-- –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
CREATE TABLE IF NOT EXISTS performance_stats (
    id SERIAL PRIMARY KEY,
    timestamp TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    metric_name TEXT NOT NULL,
    metric_value NUMERIC,
    description TEXT
);

-- –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
CREATE INDEX IF NOT EXISTS idx_performance_stats_timestamp ON performance_stats(timestamp);
CREATE INDEX IF NOT EXISTS idx_performance_stats_metric ON performance_stats(metric_name);

-- –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —Ç–∞–±–ª–∏—Ü—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
GRANT ALL PRIVILEGES ON TABLE performance_stats TO uk_bot;
GRANT USAGE, SELECT ON SEQUENCE performance_stats_id_seq TO uk_bot;
EOF

echo "‚úÖ Monitoring tables created"

# =============================================================================
# –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø
# =============================================================================

echo "üß™ Testing database connection..."

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è uk_bot
if psql -U uk_bot -d uk_management -c "SELECT 'Connection test successful' as status;" > /dev/null 2>&1; then
    echo "‚úÖ Connection test successful"
else
    echo "‚ùå Connection test failed"
    exit 1
fi

# =============================================================================
# –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–• (–û–ü–¶–ò–û–ù–ê–õ–¨–ù–û)
# =============================================================================

# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
if [ "$CREATE_TEST_DATA" = "true" ]; then
    echo "üìù Creating test data..."
    
    psql -U postgres -d uk_management << 'EOF'
    -- –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    -- –ù–∞–ø—Ä–∏–º–µ—Ä, —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∑–∞—è–≤–æ–∫ –∏ —Ç.–¥.
    
    INSERT INTO performance_stats (metric_name, metric_value, description) VALUES
    ('database_initialization', 1, 'Database initialized successfully'),
    ('extensions_loaded', 3, 'uuid-ossp, pg_trgm, pg_stat_statements loaded'),
    ('monitoring_tables_created', 2, 'connection_log and performance_stats created');
EOF
    
    echo "‚úÖ Test data created"
fi

# =============================================================================
# –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê
# =============================================================================

echo "üîç Final database verification..."

psql -U postgres -d uk_management << 'EOF'
-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
SELECT 
    schemaname,
    tablename,
    tableowner
FROM pg_tables 
WHERE schemaname IN ('public', 'audit')
ORDER BY schemaname, tablename;

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è uk_bot
SELECT 
    grantee,
    table_schema,
    table_name,
    privilege_type
FROM information_schema.table_privileges 
WHERE grantee = 'uk_bot'
ORDER BY table_schema, table_name, privilege_type;

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
SELECT extname, extversion FROM pg_extension WHERE extname IN ('uuid-ossp', 'pg_trgm', 'pg_stat_statements');
EOF

# =============================================================================
# –ó–ê–í–ï–†–®–ï–ù–ò–ï
# =============================================================================

echo "üéâ PostgreSQL initialization completed successfully!"
echo "üìä Database: uk_management"
echo "üë§ User: uk_bot"
echo "üîß Extensions: uuid-ossp, pg_trgm, pg_stat_statements"
echo "üìà Monitoring: connection_log, performance_stats tables created"
echo "‚úÖ Ready for UK Management Bot!"

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª-—Ñ–ª–∞–≥ —á—Ç–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞
touch /var/lib/postgresql/data/.uk_bot_initialized

echo "üöÄ PostgreSQL is ready for UK Management Bot!"
