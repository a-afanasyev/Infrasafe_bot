#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
project_root = Path(__file__).parent.parent
sys.path.append(str(project_root))

uk_bot_path = project_root / "uk_management_bot"
sys.path.append(str(uk_bot_path))

try:
    from uk_management_bot.database.session import SessionLocal
    from uk_management_bot.database.models.user import User
    import json
    
    def check_user_access(telegram_id: int):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏"""
        db = SessionLocal()
        try:
            user = db.query(User).filter(User.telegram_id == telegram_id).first()
            
            if not user:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å Telegram ID {telegram_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False
            
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.first_name} {user.last_name}")
            print(f"üì± Telegram ID: {user.telegram_id}")
            print(f"üîë –†–æ–ª—å (—Å—Ç–∞—Ä–∞—è): {user.role}")
            print(f"üîë –†–æ–ª–∏ (–Ω–æ–≤—ã–µ): {user.roles}")
            print(f"üéØ –ê–∫—Ç–∏–≤–Ω–∞—è —Ä–æ–ª—å: {user.active_role}")
            print(f"üìä –°—Ç–∞—Ç—É—Å: {user.status}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª–∏
            roles = []
            if user.roles:
                try:
                    roles = json.loads(user.roles) if isinstance(user.roles, str) else user.roles
                except:
                    roles = []
            
            print(f"üìã –ü–∞—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–æ–ª–∏: {roles}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
            has_admin_access = False
            if roles:
                has_admin_access = any(role in ['admin', 'manager'] for role in roles)
            elif user.role in ['admin', 'manager']:
                has_admin_access = True
            
            print(f"üîß –î–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏: {'‚úÖ –ï—Å—Ç—å' if has_admin_access else '‚ùå –ù–µ—Ç'}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Ä–æ–ª—å
            if user.active_role in ['admin', 'manager']:
                print(f"üéØ –ê–∫—Ç–∏–≤–Ω–∞—è —Ä–æ–ª—å –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø: ‚úÖ –î–∞")
            else:
                print(f"üéØ –ê–∫—Ç–∏–≤–Ω–∞—è —Ä–æ–ª—å –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø: ‚ùå –ù–µ—Ç (—Ç–µ–∫—É—â–∞—è: {user.active_role})")
            
            return has_admin_access and user.active_role in ['admin', 'manager']
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
            return False
        finally:
            db.close()
    
    if __name__ == "__main__":
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID 48617336
        telegram_id = 48617336
        print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {telegram_id}")
        print("=" * 50)
        
        has_access = check_user_access(telegram_id)
        
        print("=" * 50)
        if has_access:
            print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏")
        else:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏")
            
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞ –∏ –ø—É—Ç–∏")
except Exception as e:
    print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
