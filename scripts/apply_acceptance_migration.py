"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏ –ø–æ–ª–µ–π –ø—Ä–∏—ë–º–∫–∏ –∑–∞—è–≤–æ–∫
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from uk_management_bot.database.session import engine
from sqlalchemy import text

def apply_migration():
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏—é add_request_acceptance_fields"""

    print("üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª–µ–π –ø—Ä–∏—ë–º–∫–∏ –∑–∞—è–≤–æ–∫...")

    with engine.connect() as conn:
        try:
            # –ü–æ–ª—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∑–∞—è–≤–æ–∫ –∑–∞—è–≤–∏—Ç–µ–ª–µ–º
            print("  ‚û§ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π –≤–æ–∑–≤—Ä–∞—Ç–∞ –∑–∞—è–≤–æ–∫...")
            conn.execute(text("""
                ALTER TABLE requests
                ADD COLUMN IF NOT EXISTS is_returned BOOLEAN NOT NULL DEFAULT false
            """))
            conn.execute(text("""
                ALTER TABLE requests
                ADD COLUMN IF NOT EXISTS return_reason TEXT
            """))
            conn.execute(text("""
                ALTER TABLE requests
                ADD COLUMN IF NOT EXISTS return_media JSONB
            """))
            conn.execute(text("""
                ALTER TABLE requests
                ADD COLUMN IF NOT EXISTS returned_at TIMESTAMP WITH TIME ZONE
            """))
            conn.execute(text("""
                ALTER TABLE requests
                ADD COLUMN IF NOT EXISTS returned_by INTEGER
            """))

            # –ü–æ–ª—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
            print("  ‚û§ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º...")
            conn.execute(text("""
                ALTER TABLE requests
                ADD COLUMN IF NOT EXISTS manager_confirmed BOOLEAN NOT NULL DEFAULT false
            """))
            conn.execute(text("""
                ALTER TABLE requests
                ADD COLUMN IF NOT EXISTS manager_confirmed_by INTEGER
            """))
            conn.execute(text("""
                ALTER TABLE requests
                ADD COLUMN IF NOT EXISTS manager_confirmed_at TIMESTAMP WITH TIME ZONE
            """))
            conn.execute(text("""
                ALTER TABLE requests
                ADD COLUMN IF NOT EXISTS manager_confirmation_notes TEXT
            """))

            # –°–æ–∑–¥–∞–Ω–∏–µ –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π
            print("  ‚û§ –°–æ–∑–¥–∞–Ω–∏–µ –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π...")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ FK –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º
            result = conn.execute(text("""
                SELECT constraint_name
                FROM information_schema.table_constraints
                WHERE table_name = 'requests'
                AND constraint_name = 'fk_requests_returned_by_users'
            """))

            if result.fetchone() is None:
                conn.execute(text("""
                    ALTER TABLE requests
                    ADD CONSTRAINT fk_requests_returned_by_users
                    FOREIGN KEY (returned_by) REFERENCES users(id) ON DELETE SET NULL
                """))

            result = conn.execute(text("""
                SELECT constraint_name
                FROM information_schema.table_constraints
                WHERE table_name = 'requests'
                AND constraint_name = 'fk_requests_manager_confirmed_by_users'
            """))

            if result.fetchone() is None:
                conn.execute(text("""
                    ALTER TABLE requests
                    ADD CONSTRAINT fk_requests_manager_confirmed_by_users
                    FOREIGN KEY (manager_confirmed_by) REFERENCES users(id) ON DELETE SET NULL
                """))

            # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤
            print("  ‚û§ –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤...")
            conn.execute(text("""
                CREATE INDEX IF NOT EXISTS idx_requests_is_returned
                ON requests(is_returned)
            """))
            conn.execute(text("""
                CREATE INDEX IF NOT EXISTS idx_requests_manager_confirmed
                ON requests(manager_confirmed)
            """))

            conn.commit()

            print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞!")

        except Exception as e:
            conn.rollback()
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
            raise

if __name__ == "__main__":
    apply_migration()
