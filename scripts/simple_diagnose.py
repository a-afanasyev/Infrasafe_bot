#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π

–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –±–∞–∑–æ–≤—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
"""

import sys
import os
import json
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
project_root = Path(__file__).parent.parent
sys.path.append(str(project_root))

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ uk_management_bot
uk_bot_path = project_root / "uk_management_bot"
sys.path.append(str(uk_bot_path))

def check_database_connection():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print(f"\nüóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        from uk_management_bot.database.session import SessionLocal
        db = SessionLocal()
        # –ü—Ä–æ–±—É–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
        from sqlalchemy import text
        result = db.execute(text("SELECT 1")).scalar()
        if result == 1:
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        db.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")

def check_user_simple(telegram_id: int):
    """–ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print(f"\nüîç –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {telegram_id}...")
    
    try:
        from uk_management_bot.database.session import SessionLocal
        from uk_management_bot.database.models.user import User
        
        db = SessionLocal()
        user = db.query(User).filter(User.telegram_id == telegram_id).first()
        
        if not user:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {telegram_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return None
        
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {user.first_name} {user.last_name}")
        print(f"   ID: {user.id}")
        print(f"   Telegram ID: {user.telegram_id}")
        print(f"   Username: {user.username}")
        print(f"   Status: {user.status}")
        print(f"   Role: {user.role}")
        print(f"   Roles: {user.roles}")
        print(f"   Active Role: {user.active_role}")
        
        return user
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        return None
    finally:
        if 'db' in locals():
            db.close()

def check_settings():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    print(f"\n‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
    
    try:
        from uk_management_bot.config.settings import settings
        
        admin_ids = settings.ADMIN_USER_IDS
        if admin_ids:
            print(f"‚úÖ ADMIN_USER_IDS –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã: {admin_ids}")
        else:
            print("‚ö†Ô∏è ADMIN_USER_IDS –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        
        bot_token = settings.BOT_TOKEN
        if bot_token:
            print(f"‚úÖ BOT_TOKEN –Ω–∞—Å—Ç—Ä–æ–µ–Ω: {bot_token[:10]}...")
        else:
            print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")

def check_middleware():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å middleware"""
    print(f"\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ middleware...")
    
    try:
        main_file = uk_bot_path / "main.py"
        if not main_file.exists():
            print("‚ùå –§–∞–π–ª main.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        with open(main_file, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
        if "from middlewares.auth import auth_middleware, role_mode_middleware" in content:
            print("‚úÖ –ò–º–ø–æ—Ä—Ç middleware –Ω–∞–π–¥–µ–Ω")
        else:
            print("‚ùå –ò–º–ø–æ—Ä—Ç middleware –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é auth_middleware
        if "_auth_middleware" in content:
            print("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è auth_middleware –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print("‚ùå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è auth_middleware –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é role_mode_middleware
        if "_role_mode_middleware" in content:
            print("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è role_mode_middleware –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print("‚ùå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è role_mode_middleware –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ middleware: {e}")

def suggest_fixes(user):
    """–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    print(f"\nüõ†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é:")
    
    if not user:
        print("1. –°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    if user.status != "approved":
        print(f"1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: UPDATE users SET status = 'approved' WHERE telegram_id = {user.telegram_id};")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª–∏
    if not user.roles:
        print(f"2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: UPDATE users SET roles = '[\"admin\", \"applicant\", \"executor\", \"manager\"]' WHERE telegram_id = {user.telegram_id};")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Ä–æ–ª—å
    if not user.active_role:
        print(f"3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∞–∫—Ç–∏–≤–Ω—É—é —Ä–æ–ª—å: UPDATE users SET active_role = 'admin' WHERE telegram_id = {user.telegram_id};")
    
    print("4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –ø–æ—Å–ª–µ –≤–Ω–µ—Å–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
    print("üîç –£–ü–†–û–©–ï–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú –° –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ï–ô")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    check_database_connection()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    check_settings()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º middleware
    check_middleware()
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        telegram_id = int(input("\nüì± –í–≤–µ–¥–∏—Ç–µ Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: "))
    except ValueError:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç Telegram ID")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = check_user_simple(telegram_id)
    
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    suggest_fixes(user)
    
    print("\n" + "=" * 60)
    print("üèÅ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == "__main__":
    main()
