#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ø–æ–ª–µ notes –∑–∞—è–≤–∫–∏ 250917-006
"""

import sys
sys.path.insert(0, '/app')

from uk_management_bot.database.session import get_db
from uk_management_bot.database.models.request import Request

def clean_duplicate_notes():
    """–û—á–∏—Å—Ç–∫–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –≤ notes"""
    db = next(get_db())
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞—è–≤–∫—É 250917-006
        request = db.query(Request).filter(Request.request_number == "250917-006").first()
        
        if not request:
            print("‚ùå –ó–∞—è–≤–∫–∞ 250917-006 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
        
        if not request.notes:
            print("‚úÖ –£ –∑–∞—è–≤–∫–∏ –Ω–µ—Ç –∑–∞–º–µ—Ç–æ–∫ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏")
            return True
        
        print(f"üìù –¢–µ–∫—É—â–∏–µ –∑–∞–º–µ—Ç–∫–∏:\n{request.notes}")
        print(f"\nüìè –î–ª–∏–Ω–∞: {len(request.notes)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —Å—Ç—Ä–æ–∫–∏
        lines = request.notes.split('\n')
        print(f"üìä –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: {len(lines)}")
        
        # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã, —Å–æ—Ö—Ä–∞–Ω—è—è –ø–æ—Ä—è–¥–æ–∫
        seen = set()
        unique_lines = []
        for line in lines:
            if line.strip() and line not in seen:
                seen.add(line)
                unique_lines.append(line)
            elif not line.strip():  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                unique_lines.append(line)
        
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ
        cleaned_notes = '\n'.join(unique_lines)
        
        # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –≤ –∫–æ–Ω—Ü–µ
        cleaned_notes = cleaned_notes.rstrip('\n')
        
        print(f"\nüßπ –ü–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏:")
        print(f"üìù –û—á–∏—â–µ–Ω–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏:\n{cleaned_notes}")
        print(f"üìè –ù–æ–≤–∞—è –¥–ª–∏–Ω–∞: {len(cleaned_notes)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"üìä –°—Ç—Ä–æ–∫ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏: {len(cleaned_notes.split(chr(10)))}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        request.notes = cleaned_notes
        db.commit()
        
        print("‚úÖ –î—É–±–ª–∏–∫–∞—Ç—ã —É–¥–∞–ª–µ–Ω—ã, –∑–∞—è–≤–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ: {e}")
        return False
    finally:
        db.close()

if __name__ == '__main__':
    success = clean_duplicate_notes()
    sys.exit(0 if success else 1)