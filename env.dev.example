# UK Management Bot - Development Environment Configuration (SQLite)
# Скопируйте этот файл в .env для development с SQLite

# ═══════════════════════════════════════════════════════════════
# ОБЯЗАТЕЛЬНЫЕ НАСТРОЙКИ БЕЗОПАСНОСТИ
# ═══════════════════════════════════════════════════════════════

# Telegram Bot Token (получить у @BotFather)
# ВАЖНО: Замените на ваш реальный токен!
BOT_TOKEN=1234567890:ABCDEFGHIJKLMNOPQRSTUVWXYZ-EXAMPLE

# Development пароль (менее строгий для разработки)
ADMIN_PASSWORD=dev_password_change_me

# Development секрет (менее строгий для разработки)
INVITE_SECRET=dev_secret_change_me

# ═══════════════════════════════════════════════════════════════
# БАЗА ДАННЫХ (SQLite для development)
# ═══════════════════════════════════════════════════════════════

# SQLite для development (простая настройка)
DATABASE_URL=sqlite:///uk_management.db

# ═══════════════════════════════════════════════════════════════
# REDIS (Docker автоматически настроит)
# ═══════════════════════════════════════════════════════════════

# Включить Redis для rate limiting
USE_REDIS_RATE_LIMIT=true

# Redis connection URL для Docker
REDIS_URL=redis://redis:6379/0

# ═══════════════════════════════════════════════════════════════
# АДМИНИСТРАТОРЫ И КАНАЛЫ
# ═══════════════════════════════════════════════════════════════

# Telegram ID администраторов (через запятую)
# ВАЖНО: Замените на реальные ID администраторов!
ADMIN_USER_IDS=123456789,987654321

# Канал для уведомлений (опционально)
TELEGRAM_CHANNEL_ID=@your_notifications_channel

# ═══════════════════════════════════════════════════════════════
# DEVELOPMENT НАСТРОЙКИ
# ═══════════════════════════════════════════════════════════════

# Development режим (включен для отладки)
DEBUG=true

# Уровень логирования (подробный для разработки)
LOG_LEVEL=DEBUG

# Rate limiting для /join команды (более мягкий для разработки)
JOIN_RATE_LIMIT_WINDOW=300  # 5 минут
JOIN_RATE_LIMIT_MAX=5       # 5 попыток

# ═══════════════════════════════════════════════════════════════
# УВЕДОМЛЕНИЯ
# ═══════════════════════════════════════════════════════════════

# Включить уведомления
ENABLE_NOTIFICATIONS=true

# Количество попыток отправки уведомлений
NOTIFICATION_RETRY_COUNT=3

# ═══════════════════════════════════════════════════════════════
# GOOGLE SHEETS ИНТЕГРАЦИЯ (ОПЦИОНАЛЬНО)
# ═══════════════════════════════════════════════════════════════

# Путь к файлу с credentials от Google (внутри контейнера)
GOOGLE_SHEETS_CREDENTIALS_FILE=/app/credentials/google_credentials.json

# ID Google Spreadsheet для экспорта
GOOGLE_SHEETS_SPREADSHEET_ID=your_spreadsheet_id_here

# ═══════════════════════════════════════════════════════════════
# DOCKER СПЕЦИФИЧНЫЕ НАСТРОЙКИ
# ═══════════════════════════════════════════════════════════════

# Python путь в контейнере
PYTHONPATH=/app

# Небуферизованный вывод Python
PYTHONUNBUFFERED=1

# ═══════════════════════════════════════════════════════════════
# ПРОВЕРКА КОНФИГУРАЦИИ
# ═══════════════════════════════════════════════════════════════

# Для development с SQLite запустите:
# docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d
# 
# И проверьте логи: docker-compose logs app
